//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;

[assembly: ProxyTypesAssembly()]


namespace WebResourceSync {
    
    
    /// <summary>
    /// <para>Business that represents a customer or potential customer. The company that is billed in business transactions.</para>
    /// <para>Display Name: Account</para>
    /// </summary>
    [EntityLogicalName("account")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Account : ExtendedEntity<AccountState, Account_StatusCode> {
        
        public const string EntityLogicalName = "account";
        
        public const int EntityTypeCode = 1;
        
        public Account() : 
                base(EntityLogicalName) {
        }
        
        public Account(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("accountid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("accountid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        public Guid? AccountId {
            get {
                return GetAttributeValue<Guid?>("accountid");
            }
            set {
                SetId("accountid", value);
            }
        }
        
        /// <summary>
        /// <para>Select a category to indicate whether the customer account is standard or preferred.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("accountcategorycode")]
        public Account_AccountCategoryCode? AccountCategoryCode {
            get {
                return GetOptionSetValue<Account_AccountCategoryCode>("accountcategorycode");
            }
            set {
                SetOptionSetValue("accountcategorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select a classification code to indicate the potential value of the customer account based on the projected return on investment, cooperation level, sales cycle length or other criteria.</para>
        /// <para>Display Name: Classification</para>
        /// </summary>
        [AttributeLogicalName("accountclassificationcode")]
        public Account_AccountClassificationCode? AccountClassificationCode {
            get {
                return GetOptionSetValue<Account_AccountClassificationCode>("accountclassificationcode");
            }
            set {
                SetOptionSetValue("accountclassificationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type an ID number or code for the account to quickly search and identify the account in system views.</para>
        /// <para>Display Name: Account Number</para>
        /// </summary>
        [AttributeLogicalName("accountnumber")]
        public string AccountNumber {
            get {
                return GetAttributeValue<string>("accountnumber");
            }
            set {
                SetAttributeValue("accountnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select a rating to indicate the value of the customer account.</para>
        /// <para>Display Name: Account Rating</para>
        /// </summary>
        [AttributeLogicalName("accountratingcode")]
        public Account_AccountRatingCode? AccountRatingCode {
            get {
                return GetOptionSetValue<Account_AccountRatingCode>("accountratingcode");
            }
            set {
                SetOptionSetValue("accountratingcode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary address type.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        public Account_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Account_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the primary address.</para>
        /// <para>Display Name: Address 1: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the primary address.</para>
        /// <para>Display Name: Address 1: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the primary address.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the primary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 1: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address1_freighttermscode")]
        public Account_Address1_FreightTermsCode? Address1_FreightTermsCode {
            get {
                return GetOptionSetValue<Account_Address1_FreightTermsCode>("address1_freighttermscode");
            }
            set {
                SetOptionSetValue("address1_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the primary address.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the primary address.</para>
        /// <para>Display Name: Address 1: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's primary address.</para>
        /// <para>Display Name: Address 1: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address1_primarycontactname")]
        public string Address1_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address1_primarycontactname");
            }
            set {
                SetAttributeValue("address1_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        public Account_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the primary address.</para>
        /// <para>Display Name: Address 1: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the primary address.</para>
        /// <para>Display Name: Address Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the secondary address type.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        public Account_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Account_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the secondary address.</para>
        /// <para>Display Name: Address 2: City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Address 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the secondary address.</para>
        /// <para>Display Name: Address 2: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the secondary address.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the secondary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 2: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address2_freighttermscode")]
        public Account_Address2_FreightTermsCode? Address2_FreightTermsCode {
            get {
                return GetOptionSetValue<Account_Address2_FreightTermsCode>("address2_freighttermscode");
            }
            set {
                SetOptionSetValue("address2_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the secondary address.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the secondary address.</para>
        /// <para>Display Name: Address 2: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's secondary address.</para>
        /// <para>Display Name: Address 2: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address2_primarycontactname")]
        public string Address2_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address2_primarycontactname");
            }
            set {
                SetAttributeValue("address2_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        public Account_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the secondary address.</para>
        /// <para>Display Name: Address 2: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 30</para>
        /// </summary>
        [AttributeLogicalName("aging30")]
        public decimal? Aging30 {
            get {
                return GetMoneyValue("aging30");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 30 field.</para>
        /// <para>Display Name: Aging 30 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging30_base")]
        public decimal? Aging30_Base {
            get {
                return GetMoneyValue("aging30_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 60</para>
        /// </summary>
        [AttributeLogicalName("aging60")]
        public decimal? Aging60 {
            get {
                return GetMoneyValue("aging60");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 60 field.</para>
        /// <para>Display Name: Aging 60 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging60_base")]
        public decimal? Aging60_Base {
            get {
                return GetMoneyValue("aging60_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 90</para>
        /// </summary>
        [AttributeLogicalName("aging90")]
        public decimal? Aging90 {
            get {
                return GetMoneyValue("aging90");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 90 field.</para>
        /// <para>Display Name: Aging 90 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging90_base")]
        public decimal? Aging90_Base {
            get {
                return GetMoneyValue("aging90_base");
            }
        }
        
        /// <summary>
        /// <para>Select the legal designation or other business type of the account for contracts or reporting purposes.</para>
        /// <para>Display Name: Business Type</para>
        /// </summary>
        [AttributeLogicalName("businesstypecode")]
        public Account_BusinessTypeCode? BusinessTypeCode {
            get {
                return GetOptionSetValue<Account_BusinessTypeCode>("businesstypecode");
            }
            set {
                SetOptionSetValue("businesstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the credit limit of the account. This is a useful reference when you address invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        public decimal? CreditLimit {
            get {
                return GetMoneyValue("creditlimit");
            }
            set {
                SetMoneyValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the credit limit converted to the system's default base currency for reporting purposes.</para>
        /// <para>Display Name: Credit Limit (Base)</para>
        /// </summary>
        [AttributeLogicalName("creditlimit_base")]
        public decimal? CreditLimit_Base {
            get {
                return GetMoneyValue("creditlimit_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether the credit for the account is on hold. This is a useful reference while addressing the invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Hold</para>
        /// </summary>
        [AttributeLogicalName("creditonhold")]
        public bool? CreditOnHold {
            get {
                return GetAttributeValue<bool?>("creditonhold");
            }
            set {
                SetAttributeValue("creditonhold", value);
            }
        }
        
        /// <summary>
        /// <para>Select the size category or range of the account for segmentation and reporting purposes.</para>
        /// <para>Display Name: Customer Size</para>
        /// </summary>
        [AttributeLogicalName("customersizecode")]
        public Account_CustomerSizeCode? CustomerSizeCode {
            get {
                return GetOptionSetValue<Account_CustomerSizeCode>("customersizecode");
            }
            set {
                SetOptionSetValue("customersizecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the category that best describes the relationship between the account and your organization.</para>
        /// <para>Display Name: Relationship Type</para>
        /// </summary>
        [AttributeLogicalName("customertypecode")]
        public Account_CustomerTypeCode? CustomerTypeCode {
            get {
                return GetOptionSetValue<Account_CustomerTypeCode>("customertypecode");
            }
            set {
                SetOptionSetValue("customertypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the account, such as an excerpt from the company's website.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows bulk email sent through campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but is excluded from email.</para>
        /// <para>Display Name: Do not allow Bulk Emails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but will be excluded from the postal mail.</para>
        /// <para>Display Name: Do not allow Bulk Mails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkpostalmail")]
        public bool? DoNotBulkPostalMail {
            get {
                return GetAttributeValue<bool?>("donotbulkpostalmail");
            }
            set {
                SetAttributeValue("donotbulkpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows direct email sent from Microsoft Dynamics 365.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows faxes. If Do Not Allow is selected, the account will be excluded from fax activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows phone calls. If Do Not Allow is selected, the account will be excluded from phone call activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows direct mail. If Do Not Allow is selected, the account will be excluded from letter activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account accepts marketing materials, such as brochures or catalogs.</para>
        /// <para>Display Name: Send Marketing Materials</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Type the primary email address for the account.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the secondary email address for the account.</para>
        /// <para>Display Name: Email Address 2</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Type an alternate email address for the account.</para>
        /// <para>Display Name: Email Address 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the account.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the account.</para>
        /// <para>Display Name: Follow Email Activity</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Type the URL for the account's FTP site to enable users to access data and share documents.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        public string FtpSiteURL {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's primary industry for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: Industry</para>
        /// </summary>
        [AttributeLogicalName("industrycode")]
        public Account_IndustryCode? IndustryCode {
            get {
                return GetOptionSetValue<Account_IndustryCode>("industrycode");
            }
            set {
                SetOptionSetValue("industrycode", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date when the account was last included in a marketing campaign or quick campaign.</para>
        /// <para>Display Name: Last Date Included in Campaign</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Type the market capitalization of the account to identify the company's equity, used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Market Capitalization</para>
        /// </summary>
        [AttributeLogicalName("marketcap")]
        public decimal? MarketCap {
            get {
                return GetMoneyValue("marketcap");
            }
            set {
                SetMoneyValue("marketcap", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the market capitalization converted to the system's default base currency.</para>
        /// <para>Display Name: Market Capitalization (Base)</para>
        /// </summary>
        [AttributeLogicalName("marketcap_base")]
        public decimal? MarketCap_Base {
            get {
                return GetMoneyValue("marketcap_base");
            }
        }
        
        /// <summary>
        /// <para>Whether is only for marketing</para>
        /// <para>Display Name: Marketing Only</para>
        /// </summary>
        [AttributeLogicalName("marketingonly")]
        public bool? MarketingOnly {
            get {
                return GetAttributeValue<bool?>("marketingonly");
            }
            set {
                SetAttributeValue("marketingonly", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the master account that the account was merged with.</para>
        /// <para>Display Name: Master ID</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account has been merged with another account.</para>
        /// <para>Display Name: Merged</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the company or business name.</para>
        /// <para>Display Name: Short Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of employees that work at the account for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: Number of Employees</para>
        /// </summary>
        [AttributeLogicalName("numberofemployees")]
        public int? NumberOfEmployees {
            get {
                return GetAttributeValue<int?>("numberofemployees");
            }
            set {
                SetAttributeValue("numberofemployees", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's ownership structure, such as public or private.</para>
        /// <para>Display Name: Ownership</para>
        /// </summary>
        [AttributeLogicalName("ownershipcode")]
        public Account_OwnershipCode? OwnershipCode {
            get {
                return GetOptionSetValue<Account_OwnershipCode>("ownershipcode");
            }
            set {
                SetOptionSetValue("ownershipcode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the business unit that the record owner belongs to.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the account.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the account.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Choose the parent account associated with this account to show parent and child businesses in reporting and analytics.</para>
        /// <para>Display Name: Parent Account</para>
        /// </summary>
        [AttributeLogicalName("parentaccountid")]
        public EntityReference ParentAccountId {
            get {
                return GetAttributeValue<EntityReference>("parentaccountid");
            }
            set {
                SetAttributeValue("parentaccountid", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only. Legacy Microsoft Dynamics CRM 3.0 workflow data.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
        /// <para>Display Name: Payment Terms</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        public Account_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Account_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred day of the week for service appointments.</para>
        /// <para>Display Name: Preferred Day</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmentdaycode")]
        public Account_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
            get {
                return GetOptionSetValue<Account_PreferredAppointmentDayCode>("preferredappointmentdaycode");
            }
            set {
                SetOptionSetValue("preferredappointmentdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred time of day for service appointments.</para>
        /// <para>Display Name: Preferred Time</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmenttimecode")]
        public Account_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
            get {
                return GetOptionSetValue<Account_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
            }
            set {
                SetOptionSetValue("preferredappointmenttimecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred method of contact.</para>
        /// <para>Display Name: Preferred Method of Contact</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        public Account_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Account_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the preferred service representative for reference when you schedule service activities for the account.</para>
        /// <para>Display Name: Preferred User</para>
        /// </summary>
        [AttributeLogicalName("preferredsystemuserid")]
        public EntityReference PreferredSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("preferredsystemuserid");
            }
            set {
                SetAttributeValue("preferredsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the primary contact for the account to provide quick access to contact details.</para>
        /// <para>Display Name: Primary Contact</para>
        /// </summary>
        [AttributeLogicalName("primarycontactid")]
        public EntityReference PrimaryContactId {
            get {
                return GetAttributeValue<EntityReference>("primarycontactid");
            }
            set {
                SetAttributeValue("primarycontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Primary Satori ID for Account</para>
        /// <para>Display Name: Primary Satori ID</para>
        /// </summary>
        [AttributeLogicalName("primarysatoriid")]
        public string PrimarySatoriId {
            get {
                return GetAttributeValue<string>("primarysatoriid");
            }
            set {
                SetAttributeValue("primarysatoriid", value);
            }
        }
        
        /// <summary>
        /// <para>Primary Twitter ID for Account</para>
        /// <para>Display Name: Primary Twitter ID</para>
        /// </summary>
        [AttributeLogicalName("primarytwitterid")]
        public string PrimaryTwitterId {
            get {
                return GetAttributeValue<string>("primarytwitterid");
            }
            set {
                SetAttributeValue("primarytwitterid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the annual revenue for the account, used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Annual Revenue</para>
        /// </summary>
        [AttributeLogicalName("revenue")]
        public decimal? Revenue {
            get {
                return GetMoneyValue("revenue");
            }
            set {
                SetMoneyValue("revenue", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the annual revenue converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Annual Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("revenue_base")]
        public decimal? Revenue_Base {
            get {
                return GetMoneyValue("revenue_base");
            }
        }
        
        /// <summary>
        /// <para>Type the Standard Industrial Classification (SIC) code that indicates the account's primary industry of business, for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: SIC Code</para>
        /// </summary>
        [AttributeLogicalName("sic")]
        public string SIC {
            get {
                return GetAttributeValue<string>("sic");
            }
            set {
                SetAttributeValue("sic", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Account record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Type the number of shares available to the public for the account. This number is used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Shares Outstanding</para>
        /// </summary>
        [AttributeLogicalName("sharesoutstanding")]
        public int? SharesOutstanding {
            get {
                return GetAttributeValue<int?>("sharesoutstanding");
            }
            set {
                SetAttributeValue("sharesoutstanding", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to the account's address to designate the preferred carrier or other delivery option.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        public Account_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account is active or inactive. Inactive accounts are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public AccountState? StateCode {
            get {
                return GetOptionSetValue<AccountState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public Account_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Account_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the stock exchange at which the account is listed to track their stock and financial performance of the company.</para>
        /// <para>Display Name: Stock Exchange</para>
        /// </summary>
        [AttributeLogicalName("stockexchange")]
        public string StockExchange {
            get {
                return GetAttributeValue<string>("stockexchange");
            }
            set {
                SetAttributeValue("stockexchange", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number for this account.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number for this account.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number for this account.</para>
        /// <para>Display Name: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Select a region or territory for the account for use in segmentation and analysis.</para>
        /// <para>Display Name: Territory Code</para>
        /// </summary>
        [AttributeLogicalName("territorycode")]
        public Account_TerritoryCode? TerritoryCode {
            get {
                return GetOptionSetValue<Account_TerritoryCode>("territorycode");
            }
            set {
                SetOptionSetValue("territorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the stock exchange symbol for the account to track financial performance of the company. You can click the code entered in this field to access the latest trading information from MSN Money.</para>
        /// <para>Display Name: Ticker Symbol</para>
        /// </summary>
        [AttributeLogicalName("tickersymbol")]
        public string TickerSymbol {
            get {
                return GetAttributeValue<string>("tickersymbol");
            }
            set {
                SetAttributeValue("tickersymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to account record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the account.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Type the account's website URL to get quick details about the company profile.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        public string WebSiteURL {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the company name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.</para>
        /// <para>Display Name: Yomi Account Name</para>
        /// </summary>
        [AttributeLogicalName("yominame")]
        public string YomiName {
            get {
                return GetAttributeValue<string>("yominame");
            }
            set {
                SetAttributeValue("yominame", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Company Type</para>
        /// </summary>
        [AttributeLogicalName("dsn_companytype")]
        public dsn_companytype? dsn_CompanyType {
            get {
                return GetOptionSetValue<dsn_companytype>("dsn_companytype");
            }
            set {
                SetOptionSetValue("dsn_companytype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Company Type Suffix</para>
        /// </summary>
        [AttributeLogicalName("dsn_companytypesuffix")]
        public dsn_companytypesuffix? dsn_CompanyTypeSuffix {
            get {
                return GetOptionSetValue<dsn_companytypesuffix>("dsn_companytypesuffix");
            }
            set {
                SetOptionSetValue("dsn_companytypesuffix", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Credit Rating Date</para>
        /// </summary>
        [AttributeLogicalName("dsn_creditratingdate")]
        public DateTime? dsn_CreditRatingDate {
            get {
                return GetAttributeValue<DateTime?>("dsn_creditratingdate");
            }
            set {
                SetAttributeValue("dsn_creditratingdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Definition</para>
        /// </summary>
        [AttributeLogicalName("dsn_definition")]
        public dsn_definition? dsn_Definition {
            get {
                return GetOptionSetValue<dsn_definition>("dsn_definition");
            }
            set {
                SetOptionSetValue("dsn_definition", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Distirubution List</para>
        /// </summary>
        [AttributeLogicalName("dsn_distirubutionlist")]
        public EntityReference dsn_DistirubutionList {
            get {
                return GetAttributeValue<EntityReference>("dsn_distirubutionlist");
            }
            set {
                SetAttributeValue("dsn_distirubutionlist", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Full Company Name</para>
        /// </summary>
        [AttributeLogicalName("dsn_fullcompanyname")]
        public string dsn_FullCompanyName {
            get {
                return GetAttributeValue<string>("dsn_fullcompanyname");
            }
            set {
                SetAttributeValue("dsn_fullcompanyname", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: IMOS AP Account</para>
        /// </summary>
        [AttributeLogicalName("dsn_imosapaccount")]
        public dsn_imosapaccount? dsn_IMOSAPAccount {
            get {
                return GetOptionSetValue<dsn_imosapaccount>("dsn_imosapaccount");
            }
            set {
                SetOptionSetValue("dsn_imosapaccount", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: IMOS AR Account</para>
        /// </summary>
        [AttributeLogicalName("dsn_imosaraccount")]
        public dsn_imosaraccount? dsn_IMOSARAccount {
            get {
                return GetOptionSetValue<dsn_imosaraccount>("dsn_imosaraccount");
            }
            set {
                SetOptionSetValue("dsn_imosaraccount", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: IMOS Company Type General</para>
        /// </summary>
        [AttributeLogicalName("dsn_imoscompanytypegeneral")]
        public field_security_permission_type? dsn_IMOSCompanyTypeGeneral {
            get {
                return GetOptionSetValue<field_security_permission_type>("dsn_imoscompanytypegeneral");
            }
            set {
                SetOptionSetValue("dsn_imoscompanytypegeneral", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Navision Type</para>
        /// </summary>
        [AttributeLogicalName("dsn_navisiontype")]
        public dsn_navisiontype? dsn_NavisionType {
            get {
                return GetOptionSetValue<dsn_navisiontype>("dsn_navisiontype");
            }
            set {
                SetOptionSetValue("dsn_navisiontype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Parent Account</para>
        /// </summary>
        [AttributeLogicalName("dsn_parentaccount")]
        public EntityReference dsn_ParentAccount {
            get {
                return GetAttributeValue<EntityReference>("dsn_parentaccount");
            }
            set {
                SetAttributeValue("dsn_parentaccount", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Rated By</para>
        /// </summary>
        [AttributeLogicalName("dsn_ratedby")]
        public EntityReference dsn_RatedBy {
            get {
                return GetAttributeValue<EntityReference>("dsn_ratedby");
            }
            set {
                SetAttributeValue("dsn_ratedby", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Credit Rating</para>
        /// </summary>
        [AttributeLogicalName("dsn_creditrating")]
        public string dsn_creditrating {
            get {
                return GetAttributeValue<string>("dsn_creditrating");
            }
            set {
                SetAttributeValue("dsn_creditrating", value);
            }
        }
        
        [RelationshipSchemaName("account_master_account", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedaccount_master_account {
            get {
                return GetRelatedEntities<Account>("account_master_account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("account_master_account", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("account_parent_account", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedaccount_parent_account {
            get {
                return GetRelatedEntities<Account>("account_parent_account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("account_parent_account", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("dsn_Account_ParentAccount_Account", EntityRole.Referenced)]
        public IEnumerable<Account> Referenceddsn_Account_ParentAccount_Account {
            get {
                return GetRelatedEntities<Account>("dsn_Account_ParentAccount_Account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("dsn_Account_ParentAccount_Account", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("account_master_account", EntityRole.Referencing)]
        public Account Referencingaccount_master_account {
            get {
                return GetRelatedEntity<Account>("account_master_account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("account_master_account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentaccountid")]
        [RelationshipSchemaName("account_parent_account", EntityRole.Referencing)]
        public Account Referencingaccount_parent_account {
            get {
                return GetRelatedEntity<Account>("account_parent_account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("account_parent_account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("dsn_parentaccount")]
        [RelationshipSchemaName("dsn_Account_ParentAccount_Account", EntityRole.Referencing)]
        public Account Referencingdsn_Account_ParentAccount_Account {
            get {
                return GetRelatedEntity<Account>("dsn_Account_ParentAccount_Account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("dsn_Account_ParentAccount_Account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("primarycontactid")]
        [RelationshipSchemaName("account_primary_contact")]
        public Contact account_primary_contact {
            get {
                return GetRelatedEntity<Contact>("account_primary_contact", null);
            }
            set {
                SetRelatedEntity("account_primary_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_customer_accounts")]
        public IEnumerable<Contact> contact_customer_accounts {
            get {
                return GetRelatedEntities<Contact>("contact_customer_accounts", null);
            }
            set {
                SetRelatedEntities("contact_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_ratedby")]
        [RelationshipSchemaName("dsn_Account_RatedBy_SystemUser")]
        public SystemUser dsn_Account_RatedBy_SystemUser {
            get {
                return GetRelatedEntity<SystemUser>("dsn_Account_RatedBy_SystemUser", null);
            }
            set {
                SetRelatedEntity("dsn_Account_RatedBy_SystemUser", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_distirubutionlist")]
        [RelationshipSchemaName("dsn_DistirubutionList_dsn_Account")]
        public dsn_DistirubutionList dsn_DistirubutionList_dsn_Account {
            get {
                return GetRelatedEntity<dsn_DistirubutionList>("dsn_DistirubutionList_dsn_Account", null);
            }
            set {
                SetRelatedEntity("dsn_DistirubutionList_dsn_Account", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_SensitiveDataAccess_RelatedAccount_Ac")]
        public IEnumerable<dsn_SensitiveDataAccess> dsn_SensitiveDataAccess_RelatedAccount_Ac {
            get {
                return GetRelatedEntities<dsn_SensitiveDataAccess>("dsn_SensitiveDataAccess_RelatedAccount_Ac", null);
            }
            set {
                SetRelatedEntities("dsn_SensitiveDataAccess_RelatedAccount_Ac", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_charterparty_Broker_Account")]
        public IEnumerable<dsn_charterparty> dsn_charterparty_Broker_Account {
            get {
                return GetRelatedEntities<dsn_charterparty>("dsn_charterparty_Broker_Account", null);
            }
            set {
                SetRelatedEntities("dsn_charterparty_Broker_Account", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_charterparty_Counterparty_Account")]
        public IEnumerable<dsn_charterparty> dsn_charterparty_Counterparty_Account {
            get {
                return GetRelatedEntities<dsn_charterparty>("dsn_charterparty_Counterparty_Account", null);
            }
            set {
                SetRelatedEntities("dsn_charterparty_Counterparty_Account", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_contracthandling_Supplier_Account")]
        public IEnumerable<dsn_contracthandling> dsn_contracthandling_Supplier_Account {
            get {
                return GetRelatedEntities<dsn_contracthandling>("dsn_contracthandling_Supplier_Account", null);
            }
            set {
                SetRelatedEntities("dsn_contracthandling_Supplier_Account", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_creditrisk_account_creditrisk_id_Acco")]
        public IEnumerable<dsn_creditrisk> dsn_creditrisk_account_creditrisk_id_Acco {
            get {
                return GetRelatedEntities<dsn_creditrisk>("dsn_creditrisk_account_creditrisk_id_Acco", null);
            }
            set {
                SetRelatedEntities("dsn_creditrisk_account_creditrisk_id_Acco", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_industrialbulk_PlantAccount_Account")]
        public IEnumerable<dsn_industrialbulk> dsn_industrialbulk_PlantAccount_Account {
            get {
                return GetRelatedEntities<dsn_industrialbulk>("dsn_industrialbulk_PlantAccount_Account", null);
            }
            set {
                SetRelatedEntities("dsn_industrialbulk_PlantAccount_Account", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_meetingreport_Account_Account")]
        public IEnumerable<dsn_meetingreport> dsn_meetingreport_Account_Account {
            get {
                return GetRelatedEntities<dsn_meetingreport>("dsn_meetingreport_Account_Account", null);
            }
            set {
                SetRelatedEntities("dsn_meetingreport_Account_Account", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_accountbase_createdby")]
        public SystemUser lk_accountbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
        public SystemUser lk_accountbase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_accountbase_modifiedby")]
        public SystemUser lk_accountbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
        public SystemUser lk_accountbase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("preferredsystemuserid")]
        [RelationshipSchemaName("system_user_accounts")]
        public SystemUser system_user_accounts {
            get {
                return GetRelatedEntity<SystemUser>("system_user_accounts", null);
            }
            set {
                SetRelatedEntity("system_user_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_accounts")]
        public Team team_accounts {
            get {
                return GetRelatedEntity<Team>("team_accounts", null);
            }
            set {
                SetRelatedEntity("team_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_accounts")]
        public SystemUser user_accounts {
            get {
                return GetRelatedEntity<SystemUser>("user_accounts", null);
            }
            set {
                SetRelatedEntity("user_accounts", null, value);
            }
        }
        
        public static Account Retrieve(IOrganizationService service, Guid id, params Expression<Func<Account,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Person with whom a business unit has a relationship, such as customer, supplier, and colleague.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [EntityLogicalName("contact")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Contact : ExtendedEntity<ContactState, Contact_StatusCode> {
        
        public const string EntityLogicalName = "contact";
        
        public const int EntityTypeCode = 2;
        
        public Contact() : 
                base(EntityLogicalName) {
        }
        
        public Contact(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("contactid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("contactid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
            set {
                SetId("contactid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account with which the contact is associated.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Select the contact's role within the company or sales process, such as decision maker, employee, or influencer.</para>
        /// <para>Display Name: Role</para>
        /// </summary>
        [AttributeLogicalName("accountrolecode")]
        public Contact_AccountRoleCode? AccountRoleCode {
            get {
                return GetOptionSetValue<Contact_AccountRoleCode>("accountrolecode");
            }
            set {
                SetOptionSetValue("accountrolecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary address type.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        public Contact_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the primary address.</para>
        /// <para>Display Name: Address 1: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the primary address.</para>
        /// <para>Display Name: Address 1: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the primary address.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the primary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 1: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address1_freighttermscode")]
        public Contact_Address1_FreightTermsCode? Address1_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address1_FreightTermsCode>("address1_freighttermscode");
            }
            set {
                SetOptionSetValue("address1_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the primary address.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the primary address.</para>
        /// <para>Display Name: Address 1: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's primary address.</para>
        /// <para>Display Name: Address 1: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address1_primarycontactname")]
        public string Address1_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address1_primarycontactname");
            }
            set {
                SetAttributeValue("address1_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        public Contact_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the primary address.</para>
        /// <para>Display Name: Address 1: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the secondary address type.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        public Contact_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the secondary address.</para>
        /// <para>Display Name: Address 2: City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Address 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the secondary address.</para>
        /// <para>Display Name: Address 2: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the secondary address.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the secondary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 2: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address2_freighttermscode")]
        public Contact_Address2_FreightTermsCode? Address2_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address2_FreightTermsCode>("address2_freighttermscode");
            }
            set {
                SetOptionSetValue("address2_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the secondary address.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the secondary address.</para>
        /// <para>Display Name: Address 2: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's secondary address.</para>
        /// <para>Display Name: Address 2: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address2_primarycontactname")]
        public string Address2_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address2_primarycontactname");
            }
            set {
                SetAttributeValue("address2_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        public Contact_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the secondary address.</para>
        /// <para>Display Name: Address 2: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 3.</para>
        /// <para>Display Name: Address 3: ID</para>
        /// </summary>
        [AttributeLogicalName("address3_addressid")]
        public Guid? Address3_AddressId {
            get {
                return GetAttributeValue<Guid?>("address3_addressid");
            }
            set {
                SetAttributeValue("address3_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the third address type.</para>
        /// <para>Display Name: Address 3: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address3_addresstypecode")]
        public Contact_Address3_AddressTypeCode? Address3_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address3_AddressTypeCode>("address3_addresstypecode");
            }
            set {
                SetOptionSetValue("address3_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the 3rd address.</para>
        /// <para>Display Name: Address 3: City</para>
        /// </summary>
        [AttributeLogicalName("address3_city")]
        public string Address3_City {
            get {
                return GetAttributeValue<string>("address3_city");
            }
            set {
                SetAttributeValue("address3_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete third address.</para>
        /// <para>Display Name: Address 3</para>
        /// </summary>
        [AttributeLogicalName("address3_composite")]
        public string Address3_Composite {
            get {
                return GetAttributeValue<string>("address3_composite");
            }
        }
        
        /// <summary>
        /// <para>the country or region for the 3rd address.</para>
        /// <para>Display Name: Address3: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address3_country")]
        public string Address3_Country {
            get {
                return GetAttributeValue<string>("address3_country");
            }
            set {
                SetAttributeValue("address3_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the third address.</para>
        /// <para>Display Name: Address 3: County</para>
        /// </summary>
        [AttributeLogicalName("address3_county")]
        public string Address3_County {
            get {
                return GetAttributeValue<string>("address3_county");
            }
            set {
                SetAttributeValue("address3_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the third address.</para>
        /// <para>Display Name: Address 3: Fax</para>
        /// </summary>
        [AttributeLogicalName("address3_fax")]
        public string Address3_Fax {
            get {
                return GetAttributeValue<string>("address3_fax");
            }
            set {
                SetAttributeValue("address3_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the third address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 3: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address3_freighttermscode")]
        public Contact_Address3_FreightTermsCode? Address3_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address3_FreightTermsCode>("address3_freighttermscode");
            }
            set {
                SetOptionSetValue("address3_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the third address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 3: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address3_latitude")]
        public double? Address3_Latitude {
            get {
                return GetAttributeValue<double?>("address3_latitude");
            }
            set {
                SetAttributeValue("address3_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>the first line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address3_line1")]
        public string Address3_Line1 {
            get {
                return GetAttributeValue<string>("address3_line1");
            }
            set {
                SetAttributeValue("address3_line1", value);
            }
        }
        
        /// <summary>
        /// <para>the second line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address3_line2")]
        public string Address3_Line2 {
            get {
                return GetAttributeValue<string>("address3_line2");
            }
            set {
                SetAttributeValue("address3_line2", value);
            }
        }
        
        /// <summary>
        /// <para>the third line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address3_line3")]
        public string Address3_Line3 {
            get {
                return GetAttributeValue<string>("address3_line3");
            }
            set {
                SetAttributeValue("address3_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the third address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 3: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address3_longitude")]
        public double? Address3_Longitude {
            get {
                return GetAttributeValue<double?>("address3_longitude");
            }
            set {
                SetAttributeValue("address3_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the third address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 3: Name</para>
        /// </summary>
        [AttributeLogicalName("address3_name")]
        public string Address3_Name {
            get {
                return GetAttributeValue<string>("address3_name");
            }
            set {
                SetAttributeValue("address3_name", value);
            }
        }
        
        /// <summary>
        /// <para>the post office box number of the 3rd address.</para>
        /// <para>Display Name: Address 3: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address3_postofficebox")]
        public string Address3_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address3_postofficebox");
            }
            set {
                SetAttributeValue("address3_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>the ZIP Code or postal code for the 3rd address.</para>
        /// <para>Display Name: Address3: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address3_postalcode")]
        public string Address3_PostalCode {
            get {
                return GetAttributeValue<string>("address3_postalcode");
            }
            set {
                SetAttributeValue("address3_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's third address.</para>
        /// <para>Display Name: Address 3: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address3_primarycontactname")]
        public string Address3_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address3_primarycontactname");
            }
            set {
                SetAttributeValue("address3_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 3: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address3_shippingmethodcode")]
        public Contact_Address3_ShippingMethodCode? Address3_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address3_ShippingMethodCode>("address3_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address3_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>the state or province of the third address.</para>
        /// <para>Display Name: Address3: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address3_stateorprovince")]
        public string Address3_StateOrProvince {
            get {
                return GetAttributeValue<string>("address3_stateorprovince");
            }
            set {
                SetAttributeValue("address3_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the third address.</para>
        /// <para>Display Name: Address 3: Telephone1</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone1")]
        public string Address3_Telephone1 {
            get {
                return GetAttributeValue<string>("address3_telephone1");
            }
            set {
                SetAttributeValue("address3_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the third address.</para>
        /// <para>Display Name: Address 3: Telephone2</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone2")]
        public string Address3_Telephone2 {
            get {
                return GetAttributeValue<string>("address3_telephone2");
            }
            set {
                SetAttributeValue("address3_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 3: Telephone3</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone3")]
        public string Address3_Telephone3 {
            get {
                return GetAttributeValue<string>("address3_telephone3");
            }
            set {
                SetAttributeValue("address3_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the third address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 3: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address3_upszone")]
        public string Address3_UPSZone {
            get {
                return GetAttributeValue<string>("address3_upszone");
            }
            set {
                SetAttributeValue("address3_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 3: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address3_utcoffset")]
        public int? Address3_UTCOffset {
            get {
                return GetAttributeValue<int?>("address3_utcoffset");
            }
            set {
                SetAttributeValue("address3_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 30</para>
        /// </summary>
        [AttributeLogicalName("aging30")]
        public decimal? Aging30 {
            get {
                return GetMoneyValue("aging30");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 30 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 30 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging30_base")]
        public decimal? Aging30_Base {
            get {
                return GetMoneyValue("aging30_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 60</para>
        /// </summary>
        [AttributeLogicalName("aging60")]
        public decimal? Aging60 {
            get {
                return GetMoneyValue("aging60");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 60 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 60 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging60_base")]
        public decimal? Aging60_Base {
            get {
                return GetMoneyValue("aging60_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 90</para>
        /// </summary>
        [AttributeLogicalName("aging90")]
        public decimal? Aging90 {
            get {
                return GetMoneyValue("aging90");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 90 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 90 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging90_base")]
        public decimal? Aging90_Base {
            get {
                return GetMoneyValue("aging90_base");
            }
        }
        
        /// <summary>
        /// <para>Enter the date of the contact's wedding or service anniversary for use in customer gift programs or other communications.</para>
        /// <para>Display Name: Anniversary</para>
        /// </summary>
        [AttributeLogicalName("anniversary")]
        public DateTime? Anniversary {
            get {
                return GetAttributeValue<DateTime?>("anniversary");
            }
            set {
                SetAttributeValue("anniversary", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's annual income for use in profiling and financial analysis.</para>
        /// <para>Display Name: Annual Income</para>
        /// </summary>
        [AttributeLogicalName("annualincome")]
        public decimal? AnnualIncome {
            get {
                return GetMoneyValue("annualincome");
            }
            set {
                SetMoneyValue("annualincome", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Annual Income field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Annual Income (Base)</para>
        /// </summary>
        [AttributeLogicalName("annualincome_base")]
        public decimal? AnnualIncome_Base {
            get {
                return GetMoneyValue("annualincome_base");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's assistant.</para>
        /// <para>Display Name: Assistant</para>
        /// </summary>
        [AttributeLogicalName("assistantname")]
        public string AssistantName {
            get {
                return GetAttributeValue<string>("assistantname");
            }
            set {
                SetAttributeValue("assistantname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the contact's assistant.</para>
        /// <para>Display Name: Assistant Phone</para>
        /// </summary>
        [AttributeLogicalName("assistantphone")]
        public string AssistantPhone {
            get {
                return GetAttributeValue<string>("assistantphone");
            }
            set {
                SetAttributeValue("assistantphone", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the contact's birthday for use in customer gift programs or other communications.</para>
        /// <para>Display Name: Birthday</para>
        /// </summary>
        [AttributeLogicalName("birthdate")]
        public DateTime? BirthDate {
            get {
                return GetAttributeValue<DateTime?>("birthdate");
            }
            set {
                SetAttributeValue("birthdate", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second business phone number for this contact.</para>
        /// <para>Display Name: Business Phone 2</para>
        /// </summary>
        [AttributeLogicalName("business2")]
        public string Business2 {
            get {
                return GetAttributeValue<string>("business2");
            }
            set {
                SetAttributeValue("business2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a callback phone number for this contact.</para>
        /// <para>Display Name: Callback Number</para>
        /// </summary>
        [AttributeLogicalName("callback")]
        public string Callback {
            get {
                return GetAttributeValue<string>("callback");
            }
            set {
                SetAttributeValue("callback", value);
            }
        }
        
        /// <summary>
        /// <para>Type the names of the contact's children for reference in communications and client programs.</para>
        /// <para>Display Name: Children's Names</para>
        /// </summary>
        [AttributeLogicalName("childrensnames")]
        public string ChildrensNames {
            get {
                return GetAttributeValue<string>("childrensnames");
            }
            set {
                SetAttributeValue("childrensnames", value);
            }
        }
        
        /// <summary>
        /// <para>Type the company phone of the contact.</para>
        /// <para>Display Name: Company Phone</para>
        /// </summary>
        [AttributeLogicalName("company")]
        public string Company {
            get {
                return GetAttributeValue<string>("company");
            }
            set {
                SetAttributeValue("company", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the credit limit of the contact for reference when you address invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        public decimal? CreditLimit {
            get {
                return GetMoneyValue("creditlimit");
            }
            set {
                SetMoneyValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Credit Limit field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Credit Limit (Base)</para>
        /// </summary>
        [AttributeLogicalName("creditlimit_base")]
        public decimal? CreditLimit_Base {
            get {
                return GetMoneyValue("creditlimit_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact is on a credit hold, for reference when addressing invoice and accounting issues.</para>
        /// <para>Display Name: Credit Hold</para>
        /// </summary>
        [AttributeLogicalName("creditonhold")]
        public bool? CreditOnHold {
            get {
                return GetAttributeValue<bool?>("creditonhold");
            }
            set {
                SetAttributeValue("creditonhold", value);
            }
        }
        
        /// <summary>
        /// <para>Select the size of the contact's company for segmentation and reporting purposes.</para>
        /// <para>Display Name: Customer Size</para>
        /// </summary>
        [AttributeLogicalName("customersizecode")]
        public Contact_CustomerSizeCode? CustomerSizeCode {
            get {
                return GetOptionSetValue<Contact_CustomerSizeCode>("customersizecode");
            }
            set {
                SetOptionSetValue("customersizecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the category that best describes the relationship between the contact and your organization.</para>
        /// <para>Display Name: Relationship Type</para>
        /// </summary>
        [AttributeLogicalName("customertypecode")]
        public Contact_CustomerTypeCode? CustomerTypeCode {
            get {
                return GetOptionSetValue<Contact_CustomerTypeCode>("customertypecode");
            }
            set {
                SetOptionSetValue("customertypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the department or business unit where the contact works in the parent company or business.</para>
        /// <para>Display Name: Department</para>
        /// </summary>
        [AttributeLogicalName("department")]
        public string Department {
            get {
                return GetAttributeValue<string>("department");
            }
            set {
                SetAttributeValue("department", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the contact, such as an excerpt from the company's website.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts bulk email sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the email.</para>
        /// <para>Display Name: Do not allow Bulk Emails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the letters.</para>
        /// <para>Display Name: Do not allow Bulk Mails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkpostalmail")]
        public bool? DoNotBulkPostalMail {
            get {
                return GetAttributeValue<bool?>("donotbulkpostalmail");
            }
            set {
                SetAttributeValue("donotbulkpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows direct email sent from Microsoft Dynamics 365. If Do Not Allow is selected, Microsoft Dynamics 365 will not send the email.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows faxes. If Do Not Allow is selected, the contact will be excluded from any fax activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts phone calls. If Do Not Allow is selected, the contact will be excluded from any phone call activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows direct mail. If Do Not Allow is selected, the contact will be excluded from letter activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts marketing materials, such as brochures or catalogs. Contacts that opt out can be excluded from marketing initiatives.</para>
        /// <para>Display Name: Send Marketing Materials</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Type the primary email address for the contact.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the secondary email address for the contact.</para>
        /// <para>Display Name: Email Address 2</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Type an alternate email address for the contact.</para>
        /// <para>Display Name: Email Address 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        /// <summary>
        /// <para>Select the contact's highest level of education for use in segmentation and analysis.</para>
        /// <para>Display Name: Education</para>
        /// </summary>
        [AttributeLogicalName("educationcode")]
        public Contact_EducationCode? EducationCode {
            get {
                return GetOptionSetValue<Contact_EducationCode>("educationcode");
            }
            set {
                SetOptionSetValue("educationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the employee ID or number for the contact for reference in orders, service cases, or other communications with the contact's organization.</para>
        /// <para>Display Name: Employee</para>
        /// </summary>
        [AttributeLogicalName("employeeid")]
        public string EmployeeId {
            get {
                return GetAttributeValue<string>("employeeid");
            }
            set {
                SetAttributeValue("employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Identifier for an external user.</para>
        /// <para>Display Name: External User Identifier</para>
        /// </summary>
        [AttributeLogicalName("externaluseridentifier")]
        public string ExternalUserIdentifier {
            get {
                return GetAttributeValue<string>("externaluseridentifier");
            }
            set {
                SetAttributeValue("externaluseridentifier", value);
            }
        }
        
        /// <summary>
        /// <para>Select the marital status of the contact for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: Marital Status</para>
        /// </summary>
        [AttributeLogicalName("familystatuscode")]
        public Contact_FamilyStatusCode? FamilyStatusCode {
            get {
                return GetOptionSetValue<Contact_FamilyStatusCode>("familystatuscode");
            }
            set {
                SetOptionSetValue("familystatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the contact.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's first name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the contact.</para>
        /// <para>Display Name: Follow Email Activity</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Type the URL for the contact's FTP site to enable users to access data and share documents.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        public string FtpSiteUrl {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Select the contact's gender to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Gender</para>
        /// </summary>
        [AttributeLogicalName("gendercode")]
        public Contact_GenderCode? GenderCode {
            get {
                return GetOptionSetValue<Contact_GenderCode>("gendercode");
            }
            set {
                SetOptionSetValue("gendercode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the passport number or other government ID for the contact for use in documents or reports.</para>
        /// <para>Display Name: Government</para>
        /// </summary>
        [AttributeLogicalName("governmentid")]
        public string GovernmentId {
            get {
                return GetAttributeValue<string>("governmentid");
            }
            set {
                SetAttributeValue("governmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact has any children for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: Has Children</para>
        /// </summary>
        [AttributeLogicalName("haschildrencode")]
        public Contact_HasChildrenCode? HasChildrenCode {
            get {
                return GetOptionSetValue<Contact_HasChildrenCode>("haschildrencode");
            }
            set {
                SetOptionSetValue("haschildrencode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second home phone number for this contact.</para>
        /// <para>Display Name: Home Phone 2</para>
        /// </summary>
        [AttributeLogicalName("home2")]
        public string Home2 {
            get {
                return GetAttributeValue<string>("home2");
            }
            set {
                SetAttributeValue("home2", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact exists in a separate accounting or other system, such as Microsoft Dynamics GP or another ERP database, for use in integration processes.</para>
        /// <para>Display Name: Back Office Customer</para>
        /// </summary>
        [AttributeLogicalName("isbackofficecustomer")]
        public bool? IsBackofficeCustomer {
            get {
                return GetAttributeValue<bool?>("isbackofficecustomer");
            }
            set {
                SetAttributeValue("isbackofficecustomer", value);
            }
        }
        
        /// <summary>
        /// <para>Type the job title of the contact to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's last name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date when the contact was last included in a marketing campaign or quick campaign.</para>
        /// <para>Display Name: Last Date Included in Campaign</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary marketing source that directed the contact to your organization.</para>
        /// <para>Display Name: Lead Source</para>
        /// </summary>
        [AttributeLogicalName("leadsourcecode")]
        public Contact_LeadSourceCode? LeadSourceCode {
            get {
                return GetOptionSetValue<Contact_LeadSourceCode>("leadsourcecode");
            }
            set {
                SetOptionSetValue("leadsourcecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's manager for use in escalating issues or other follow-up communications with the contact.</para>
        /// <para>Display Name: Manager</para>
        /// </summary>
        [AttributeLogicalName("managername")]
        public string ManagerName {
            get {
                return GetAttributeValue<string>("managername");
            }
            set {
                SetAttributeValue("managername", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the contact's manager.</para>
        /// <para>Display Name: Manager Phone</para>
        /// </summary>
        [AttributeLogicalName("managerphone")]
        public string ManagerPhone {
            get {
                return GetAttributeValue<string>("managerphone");
            }
            set {
                SetAttributeValue("managerphone", value);
            }
        }
        
        /// <summary>
        /// <para>Whether is only for marketing</para>
        /// <para>Display Name: Marketing Only</para>
        /// </summary>
        [AttributeLogicalName("marketingonly")]
        public bool? MarketingOnly {
            get {
                return GetAttributeValue<bool?>("marketingonly");
            }
            set {
                SetAttributeValue("marketingonly", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the master contact for merge.</para>
        /// <para>Display Name: Master ID</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account has been merged with a master contact.</para>
        /// <para>Display Name: Merged</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's middle name or initial to make sure the contact is addressed correctly.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Type the mobile phone number for the contact.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's nickname.</para>
        /// <para>Display Name: Nickname</para>
        /// </summary>
        [AttributeLogicalName("nickname")]
        public string NickName {
            get {
                return GetAttributeValue<string>("nickname");
            }
            set {
                SetAttributeValue("nickname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of children the contact has for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: No. of Children</para>
        /// </summary>
        [AttributeLogicalName("numberofchildren")]
        public int? NumberOfChildren {
            get {
                return GetAttributeValue<int?>("numberofchildren");
            }
            set {
                SetAttributeValue("numberofchildren", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the contact.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the contact.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the contact.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the pager number for the contact.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("pager")]
        public string Pager {
            get {
                return GetAttributeValue<string>("pager");
            }
            set {
                SetAttributeValue("pager", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the parent contact.</para>
        /// <para>Display Name: Parent Contact</para>
        /// </summary>
        [AttributeLogicalName("parentcontactid")]
        public EntityReference ParentContactId {
            get {
                return GetAttributeValue<EntityReference>("parentcontactid");
            }
        }
        
        /// <summary>
        /// <para>Select the parent account or parent contact for the contact to provide a quick link to additional details, such as financial information, activities, and opportunities.</para>
        /// <para>Display Name: Company Name</para>
        /// </summary>
        [AttributeLogicalName("parentcustomerid")]
        public EntityReference ParentCustomerId {
            get {
                return GetAttributeValue<EntityReference>("parentcustomerid");
            }
            set {
                SetAttributeValue("parentcustomerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the contact participates in workflow rules.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
        /// <para>Display Name: Payment Terms</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        public Contact_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Contact_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred day of the week for service appointments.</para>
        /// <para>Display Name: Preferred Day</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmentdaycode")]
        public Contact_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
            get {
                return GetOptionSetValue<Contact_PreferredAppointmentDayCode>("preferredappointmentdaycode");
            }
            set {
                SetOptionSetValue("preferredappointmentdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred time of day for service appointments.</para>
        /// <para>Display Name: Preferred Time</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmenttimecode")]
        public Contact_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
            get {
                return GetOptionSetValue<Contact_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
            }
            set {
                SetOptionSetValue("preferredappointmenttimecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred method of contact.</para>
        /// <para>Display Name: Preferred Method of Contact</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        public Contact_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Contact_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the regular or preferred customer service representative for reference when scheduling service activities for the contact.</para>
        /// <para>Display Name: Preferred User</para>
        /// </summary>
        [AttributeLogicalName("preferredsystemuserid")]
        public EntityReference PreferredSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("preferredsystemuserid");
            }
            set {
                SetAttributeValue("preferredsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Contact record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Type the salutation of the contact to make sure the contact is addressed correctly in sales calls, email messages, and marketing campaigns.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        public Contact_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's spouse or partner for reference during calls, events, or other communications with the contact.</para>
        /// <para>Display Name: Spouse/Partner Name</para>
        /// </summary>
        [AttributeLogicalName("spousesname")]
        public string SpousesName {
            get {
                return GetAttributeValue<string>("spousesname");
            }
            set {
                SetAttributeValue("spousesname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the contact is active or inactive. Inactive contacts are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public ContactState? StateCode {
            get {
                return GetOptionSetValue<ContactState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the contact's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public Contact_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Contact_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the suffix used in the contact's name, such as Jr. or Sr. to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Suffix</para>
        /// </summary>
        [AttributeLogicalName("suffix")]
        public string Suffix {
            get {
                return GetAttributeValue<string>("suffix");
            }
            set {
                SetAttributeValue("suffix", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number for this contact.</para>
        /// <para>Display Name: Business Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number for this contact.</para>
        /// <para>Display Name: Home Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number for this contact.</para>
        /// <para>Display Name: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Select a region or territory for the contact for use in segmentation and analysis.</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territorycode")]
        public Contact_TerritoryCode? TerritoryCode {
            get {
                return GetOptionSetValue<Contact_TerritoryCode>("territorycode");
            }
            set {
                SetOptionSetValue("territorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to the contact record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the contact.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's professional or personal website or blog URL.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        public string WebSiteUrl {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's first name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the combined Yomi first and last names of the contact so that the full phonetic name can be displayed in views and reports.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's last name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's middle name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Distirubution List</para>
        /// </summary>
        [AttributeLogicalName("dsn_distirubutionlist")]
        public EntityReference dsn_DistirubutionList {
            get {
                return GetAttributeValue<EntityReference>("dsn_distirubutionlist");
            }
            set {
                SetAttributeValue("dsn_distirubutionlist", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("dsn_salutation")]
        public Contact_dsn_Salutation? dsn_Salutation {
            get {
                return GetOptionSetValue<Contact_dsn_Salutation>("dsn_salutation");
            }
            set {
                SetOptionSetValue("dsn_salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Contract Handling</para>
        /// </summary>
        [AttributeLogicalName("dsn_contracthandling")]
        public EntityReference dsn_contracthandling {
            get {
                return GetAttributeValue<EntityReference>("dsn_contracthandling");
            }
            set {
                SetAttributeValue("dsn_contracthandling", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Meeting Report</para>
        /// </summary>
        [AttributeLogicalName("dsn_meetingreport")]
        public EntityReference dsn_meetingreport {
            get {
                return GetAttributeValue<EntityReference>("dsn_meetingreport");
            }
            set {
                SetAttributeValue("dsn_meetingreport", value);
            }
        }
        
        [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referenced)]
        public IEnumerable<Contact> Referencedcontact_customer_contacts {
            get {
                return GetRelatedEntities<Contact>("contact_customer_contacts", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contact_customer_contacts", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("contact_master_contact", EntityRole.Referenced)]
        public IEnumerable<Contact> Referencedcontact_master_contact {
            get {
                return GetRelatedEntities<Contact>("contact_master_contact", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contact_master_contact", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentcustomerid")]
        [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referencing)]
        public Contact Referencingcontact_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("contact_customer_contacts", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contact_customer_contacts", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("contact_master_contact", EntityRole.Referencing)]
        public Contact Referencingcontact_master_contact {
            get {
                return GetRelatedEntity<Contact>("contact_master_contact", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contact_master_contact", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("account_primary_contact")]
        public IEnumerable<Account> account_primary_contact {
            get {
                return GetRelatedEntities<Account>("account_primary_contact", null);
            }
            set {
                SetRelatedEntities("account_primary_contact", null, value);
            }
        }
        
        [AttributeLogicalName("parentcustomerid")]
        [RelationshipSchemaName("contact_customer_accounts")]
        public Account contact_customer_accounts {
            get {
                return GetRelatedEntity<Account>("contact_customer_accounts", null);
            }
            set {
                SetRelatedEntity("contact_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("contact_owning_user")]
        public SystemUser contact_owning_user {
            get {
                return GetRelatedEntity<SystemUser>("contact_owning_user", null);
            }
            set {
                SetRelatedEntity("contact_owning_user", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_distirubutionlist")]
        [RelationshipSchemaName("dsn_DistirubutionList_dsn_Contact")]
        public dsn_DistirubutionList dsn_DistirubutionList_dsn_Contact {
            get {
                return GetRelatedEntity<dsn_DistirubutionList>("dsn_DistirubutionList_dsn_Contact", null);
            }
            set {
                SetRelatedEntity("dsn_DistirubutionList_dsn_Contact", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_charterparty_CPContact_Contact")]
        public IEnumerable<dsn_charterparty> dsn_charterparty_CPContact_Contact {
            get {
                return GetRelatedEntities<dsn_charterparty>("dsn_charterparty_CPContact_Contact", null);
            }
            set {
                SetRelatedEntities("dsn_charterparty_CPContact_Contact", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_contracthandling")]
        [RelationshipSchemaName("dsn_contracthandling_dsn_contracthandling")]
        public dsn_contracthandling dsn_contracthandling_dsn_contracthandling {
            get {
                return GetRelatedEntity<dsn_contracthandling>("dsn_contracthandling_dsn_contracthandling", null);
            }
            set {
                SetRelatedEntity("dsn_contracthandling_dsn_contracthandling", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_industrialbulk_Broker_Contact")]
        public IEnumerable<dsn_industrialbulk> dsn_industrialbulk_Broker_Contact {
            get {
                return GetRelatedEntities<dsn_industrialbulk>("dsn_industrialbulk_Broker_Contact", null);
            }
            set {
                SetRelatedEntities("dsn_industrialbulk_Broker_Contact", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_industrialbulk_PrimaryContact_Contact")]
        public IEnumerable<dsn_industrialbulk> dsn_industrialbulk_PrimaryContact_Contact {
            get {
                return GetRelatedEntities<dsn_industrialbulk>("dsn_industrialbulk_PrimaryContact_Contact", null);
            }
            set {
                SetRelatedEntities("dsn_industrialbulk_PrimaryContact_Contact", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_meetingreport")]
        [RelationshipSchemaName("dsn_meetingreport_dsn_meetingreport_Conta")]
        public dsn_meetingreport dsn_meetingreport_dsn_meetingreport_Conta {
            get {
                return GetRelatedEntity<dsn_meetingreport>("dsn_meetingreport_dsn_meetingreport_Conta", null);
            }
            set {
                SetRelatedEntity("dsn_meetingreport_dsn_meetingreport_Conta", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_contact_createdonbehalfby")]
        public SystemUser lk_contact_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contact_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_contact_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
        public SystemUser lk_contact_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contact_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_contact_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_contactbase_createdby")]
        public SystemUser lk_contactbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contactbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_contactbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_contactbase_modifiedby")]
        public SystemUser lk_contactbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contactbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_contactbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("preferredsystemuserid")]
        [RelationshipSchemaName("system_user_contacts")]
        public SystemUser system_user_contacts {
            get {
                return GetRelatedEntity<SystemUser>("system_user_contacts", null);
            }
            set {
                SetRelatedEntity("system_user_contacts", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_contacts")]
        public Team team_contacts {
            get {
                return GetRelatedEntity<Team>("team_contacts", null);
            }
            set {
                SetRelatedEntity("team_contacts", null, value);
            }
        }
        
        public static Contact Retrieve(IOrganizationService service, Guid id, params Expression<Func<Contact,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Person with access to the Microsoft CRM system and who owns objects in the Microsoft CRM database.</para>
    /// <para>Display Name: User</para>
    /// </summary>
    [EntityLogicalName("systemuser")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SystemUser : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "systemuser";
        
        public const int EntityTypeCode = 8;
        
        public SystemUser() : 
                base(EntityLogicalName) {
        }
        
        public SystemUser(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user.</para>
        /// <para>Display Name: User</para>
        /// </summary>
        [AttributeLogicalName("systemuserid")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of user.</para>
        /// <para>Display Name: Access Mode</para>
        /// </summary>
        [AttributeLogicalName("accessmode")]
        public SystemUser_AccessMode? AccessMode {
            get {
                return GetOptionSetValue<SystemUser_AccessMode>("accessmode");
            }
            set {
                SetOptionSetValue("accessmode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 1, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        public SystemUser_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 1.</para>
        /// <para>Display Name: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 1.</para>
        /// <para>Display Name: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 1.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 1.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 1.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 1 information.</para>
        /// <para>Display Name: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 1 information.</para>
        /// <para>Display Name: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 1 information.</para>
        /// <para>Display Name: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 1.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 1.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 1.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 1.</para>
        /// <para>Display Name: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 1.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        public SystemUser_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 1.</para>
        /// <para>Display Name: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 1.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 1.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 1.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 1.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 2, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        public SystemUser_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 2.</para>
        /// <para>Display Name: Other City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Other Address</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 2.</para>
        /// <para>Display Name: Other Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 2.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 2.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 2.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 2.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 2.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 2.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 2.</para>
        /// <para>Display Name: Other ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 2.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        public SystemUser_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 2.</para>
        /// <para>Display Name: Other State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 2.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>The identifier for the application. This is used to access data in another application.</para>
        /// <para>Display Name: Application ID</para>
        /// </summary>
        [AttributeLogicalName("applicationid")]
        public Guid? ApplicationId {
            get {
                return GetAttributeValue<Guid?>("applicationid");
            }
            set {
                SetAttributeValue("applicationid", value);
            }
        }
        
        /// <summary>
        /// <para>The URI used as a unique logical identifier for the external app. This can be used to validate the application.</para>
        /// <para>Display Name: Application ID URI</para>
        /// </summary>
        [AttributeLogicalName("applicationiduri")]
        public string ApplicationIdUri {
            get {
                return GetAttributeValue<string>("applicationiduri");
            }
        }
        
        /// <summary>
        /// <para>This is the application directory object Id.</para>
        /// <para>Display Name: Azure AD Object ID</para>
        /// </summary>
        [AttributeLogicalName("azureactivedirectoryobjectid")]
        public Guid? AzureActiveDirectoryObjectId {
            get {
                return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the user is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>License type of user.</para>
        /// <para>Display Name: License Type</para>
        /// </summary>
        [AttributeLogicalName("caltype")]
        public SystemUser_CALType? CALType {
            get {
                return GetOptionSetValue<SystemUser_CALType>("caltype");
            }
            set {
                SetOptionSetValue("caltype", value);
            }
        }
        
        /// <summary>
        /// <para>Fiscal calendar associated with the user.</para>
        /// <para>Display Name: Calendar</para>
        /// </summary>
        [AttributeLogicalName("calendarid")]
        public EntityReference CalendarId {
            get {
                return GetAttributeValue<EntityReference>("calendarid");
            }
            set {
                SetAttributeValue("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the user.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the systemuser.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Indicates if default outlook filters have been populated.</para>
        /// <para>Display Name: Default Filters Populated</para>
        /// </summary>
        [AttributeLogicalName("defaultfilterspopulated")]
        public bool? DefaultFiltersPopulated {
            get {
                return GetAttributeValue<bool?>("defaultfilterspopulated");
            }
        }
        
        /// <summary>
        /// <para>Select the mailbox associated with this user.</para>
        /// <para>Display Name: Mailbox</para>
        /// </summary>
        [AttributeLogicalName("defaultmailbox")]
        public EntityReference DefaultMailbox {
            get {
                return GetAttributeValue<EntityReference>("defaultmailbox");
            }
        }
        
        /// <summary>
        /// <para>Type a default folder name for the user's OneDrive For Business location.</para>
        /// <para>Display Name: Default OneDrive for Business Folder Name</para>
        /// </summary>
        [AttributeLogicalName("defaultodbfoldername")]
        public string DefaultOdbFolderName {
            get {
                return GetAttributeValue<string>("defaultodbfoldername");
            }
        }
        
        /// <summary>
        /// <para>Reason for disabling the user.</para>
        /// <para>Display Name: Disabled Reason</para>
        /// </summary>
        [AttributeLogicalName("disabledreason")]
        public string DisabledReason {
            get {
                return GetAttributeValue<string>("disabledreason");
            }
        }
        
        /// <summary>
        /// <para>Whether to display the user in service views.</para>
        /// <para>Display Name: Display in Service Views</para>
        /// </summary>
        [AttributeLogicalName("displayinserviceviews")]
        public bool? DisplayInServiceViews {
            get {
                return GetAttributeValue<bool?>("displayinserviceviews");
            }
            set {
                SetAttributeValue("displayinserviceviews", value);
            }
        }
        
        /// <summary>
        /// <para>Active Directory domain of which the user is a member.</para>
        /// <para>Display Name: User Name</para>
        /// </summary>
        [AttributeLogicalName("domainname")]
        public string DomainName {
            get {
                return GetAttributeValue<string>("domainname");
            }
            set {
                SetAttributeValue("domainname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the primary email address.</para>
        /// <para>Display Name: Primary Email Status</para>
        /// </summary>
        [AttributeLogicalName("emailrouteraccessapproval")]
        public SystemUser_EmailRouterAccessApproval? EmailRouterAccessApproval {
            get {
                return GetOptionSetValue<SystemUser_EmailRouterAccessApproval>("emailrouteraccessapproval");
            }
            set {
                SetOptionSetValue("emailrouteraccessapproval", value);
            }
        }
        
        /// <summary>
        /// <para>Employee identifier for the user.</para>
        /// <para>Display Name: Employee</para>
        /// </summary>
        [AttributeLogicalName("employeeid")]
        public string EmployeeId {
            get {
                return GetAttributeValue<string>("employeeid");
            }
            set {
                SetAttributeValue("employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the systemuser with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>First name of the user.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Full name of the user.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Government identifier for the user.</para>
        /// <para>Display Name: Government</para>
        /// </summary>
        [AttributeLogicalName("governmentid")]
        public string GovernmentId {
            get {
                return GetAttributeValue<string>("governmentid");
            }
            set {
                SetAttributeValue("governmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Home phone number for the user.</para>
        /// <para>Display Name: Home Phone</para>
        /// </summary>
        [AttributeLogicalName("homephone")]
        public string HomePhone {
            get {
                return GetAttributeValue<string>("homephone");
            }
            set {
                SetAttributeValue("homephone", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Unique user identity id</para>
        /// </summary>
        [AttributeLogicalName("identityid")]
        public int? IdentityId {
            get {
                return GetAttributeValue<int?>("identityid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Incoming email delivery method for the user.</para>
        /// <para>Display Name: Incoming Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("incomingemaildeliverymethod")]
        public SystemUser_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_IncomingEmailDeliveryMethod>("incomingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("incomingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Internal email address for the user.</para>
        /// <para>Display Name: Primary Email</para>
        /// </summary>
        [AttributeLogicalName("internalemailaddress")]
        public string InternalEMailAddress {
            get {
                return GetAttributeValue<string>("internalemailaddress");
            }
            set {
                SetAttributeValue("internalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User invitation status.</para>
        /// <para>Display Name: Invitation Status</para>
        /// </summary>
        [AttributeLogicalName("invitestatuscode")]
        public SystemUser_InviteStatusCode? InviteStatusCode {
            get {
                return GetOptionSetValue<SystemUser_InviteStatusCode>("invitestatuscode");
            }
            set {
                SetOptionSetValue("invitestatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is enabled.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("isdisabled")]
        public bool? IsDisabled {
            get {
                return GetAttributeValue<bool?>("isdisabled");
            }
            set {
                SetAttributeValue("isdisabled", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of approval of the email address by O365 Admin.</para>
        /// <para>Display Name: Email Address O365 Admin Approval Status</para>
        /// </summary>
        [AttributeLogicalName("isemailaddressapprovedbyo365admin")]
        public bool? IsEmailAddressApprovedByO365Admin {
            get {
                return GetAttributeValue<bool?>("isemailaddressapprovedbyo365admin");
            }
        }
        
        /// <summary>
        /// <para>Check if user is an integration user.</para>
        /// <para>Display Name: Integration user mode</para>
        /// </summary>
        [AttributeLogicalName("isintegrationuser")]
        public bool? IsIntegrationUser {
            get {
                return GetAttributeValue<bool?>("isintegrationuser");
            }
            set {
                SetAttributeValue("isintegrationuser", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is licensed.</para>
        /// <para>Display Name: User Licensed</para>
        /// </summary>
        [AttributeLogicalName("islicensed")]
        public bool? IsLicensed {
            get {
                return GetAttributeValue<bool?>("islicensed");
            }
            set {
                SetAttributeValue("islicensed", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is synced with the directory.</para>
        /// <para>Display Name: User Synced</para>
        /// </summary>
        [AttributeLogicalName("issyncwithdirectory")]
        public bool? IsSyncWithDirectory {
            get {
                return GetAttributeValue<bool?>("issyncwithdirectory");
            }
            set {
                SetAttributeValue("issyncwithdirectory", value);
            }
        }
        
        /// <summary>
        /// <para>Job title of the user.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Last name of the user.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Middle name of the user.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile alert email address for the user.</para>
        /// <para>Display Name: Mobile Alert Email</para>
        /// </summary>
        [AttributeLogicalName("mobilealertemail")]
        public string MobileAlertEMail {
            get {
                return GetAttributeValue<string>("mobilealertemail");
            }
            set {
                SetAttributeValue("mobilealertemail", value);
            }
        }
        
        /// <summary>
        /// <para>Items contained with a particular SystemUser.</para>
        /// <para>Display Name: Mobile Offline Profile</para>
        /// </summary>
        [AttributeLogicalName("mobileofflineprofileid")]
        public EntityReference MobileOfflineProfileId {
            get {
                return GetAttributeValue<EntityReference>("mobileofflineprofileid");
            }
            set {
                SetAttributeValue("mobileofflineprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile phone number for the user.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the user.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the systemuser.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Nickname of the user.</para>
        /// <para>Display Name: Nickname</para>
        /// </summary>
        [AttributeLogicalName("nickname")]
        public string NickName {
            get {
                return GetAttributeValue<string>("nickname");
            }
            set {
                SetAttributeValue("nickname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the user.</para>
        /// <para>Display Name: Organization </para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Outgoing email delivery method for the user.</para>
        /// <para>Display Name: Outgoing Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("outgoingemaildeliverymethod")]
        public SystemUser_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_OutgoingEmailDeliveryMethod>("outgoingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("outgoingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the manager of the user.</para>
        /// <para>Display Name: Manager</para>
        /// </summary>
        [AttributeLogicalName("parentsystemuserid")]
        public EntityReference ParentSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("parentsystemuserid");
            }
            set {
                SetAttributeValue("parentsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Hi</para>
        /// </summary>
        [AttributeLogicalName("passporthi")]
        public int? PassportHi {
            get {
                return GetAttributeValue<int?>("passporthi");
            }
            set {
                SetAttributeValue("passporthi", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Lo</para>
        /// </summary>
        [AttributeLogicalName("passportlo")]
        public int? PassportLo {
            get {
                return GetAttributeValue<int?>("passportlo");
            }
            set {
                SetAttributeValue("passportlo", value);
            }
        }
        
        /// <summary>
        /// <para>Personal email address of the user.</para>
        /// <para>Display Name: Email 2</para>
        /// </summary>
        [AttributeLogicalName("personalemailaddress")]
        public string PersonalEMailAddress {
            get {
                return GetAttributeValue<string>("personalemailaddress");
            }
            set {
                SetAttributeValue("personalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>URL for the Website on which a photo of the user is located.</para>
        /// <para>Display Name: Photo URL</para>
        /// </summary>
        [AttributeLogicalName("photourl")]
        public string PhotoUrl {
            get {
                return GetAttributeValue<string>("photourl");
            }
            set {
                SetAttributeValue("photourl", value);
            }
        }
        
        /// <summary>
        /// <para>User's position in hierarchical security model.</para>
        /// <para>Display Name: Position</para>
        /// </summary>
        [AttributeLogicalName("positionid")]
        public EntityReference PositionId {
            get {
                return GetAttributeValue<EntityReference>("positionid");
            }
            set {
                SetAttributeValue("positionid", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred address for the user.</para>
        /// <para>Display Name: Preferred Address</para>
        /// </summary>
        [AttributeLogicalName("preferredaddresscode")]
        public SystemUser_PreferredAddressCode? PreferredAddressCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredAddressCode>("preferredaddresscode");
            }
            set {
                SetOptionSetValue("preferredaddresscode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred email address for the user.</para>
        /// <para>Display Name: Preferred Email</para>
        /// </summary>
        [AttributeLogicalName("preferredemailcode")]
        public SystemUser_PreferredEmailCode? PreferredEmailCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredEmailCode>("preferredemailcode");
            }
            set {
                SetOptionSetValue("preferredemailcode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred phone number for the user.</para>
        /// <para>Display Name: Preferred Phone</para>
        /// </summary>
        [AttributeLogicalName("preferredphonecode")]
        public SystemUser_PreferredPhoneCode? PreferredPhoneCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredPhoneCode>("preferredphonecode");
            }
            set {
                SetOptionSetValue("preferredphonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default queue for the user.</para>
        /// <para>Display Name: Default Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        public EntityReference QueueId {
            get {
                return GetAttributeValue<EntityReference>("queueid");
            }
            set {
                SetAttributeValue("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>Salutation for correspondence with the user.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Check if user is a setup user.</para>
        /// <para>Display Name: Restricted Access Mode</para>
        /// </summary>
        [AttributeLogicalName("setupuser")]
        public bool? SetupUser {
            get {
                return GetAttributeValue<bool?>("setupuser");
            }
            set {
                SetAttributeValue("setupuser", value);
            }
        }
        
        /// <summary>
        /// <para>SharePoint Work Email Address</para>
        /// <para>Display Name: SharePoint Email Address</para>
        /// </summary>
        [AttributeLogicalName("sharepointemailaddress")]
        public string SharePointEmailAddress {
            get {
                return GetAttributeValue<string>("sharepointemailaddress");
            }
            set {
                SetAttributeValue("sharepointemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Skill set of the user.</para>
        /// <para>Display Name: Skills</para>
        /// </summary>
        [AttributeLogicalName("skills")]
        public string Skills {
            get {
                return GetAttributeValue<string>("skills");
            }
            set {
                SetAttributeValue("skills", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the territory to which the user is assigned.</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territoryid")]
        public EntityReference TerritoryId {
            get {
                return GetAttributeValue<EntityReference>("territoryid");
            }
            set {
                SetAttributeValue("territoryid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Title of the user.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the systemuser.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of user license.</para>
        /// <para>Display Name: User License Type</para>
        /// </summary>
        [AttributeLogicalName("userlicensetype")]
        public int? UserLicenseType {
            get {
                return GetAttributeValue<int?>("userlicensetype");
            }
            set {
                SetAttributeValue("userlicensetype", value);
            }
        }
        
        /// <summary>
        /// <para> User PUID User Identifiable Information</para>
        /// <para>Display Name: User PUID</para>
        /// </summary>
        [AttributeLogicalName("userpuid")]
        public string UserPuid {
            get {
                return GetAttributeValue<string>("userpuid");
            }
        }
        
        /// <summary>
        /// <para>Version number of the user.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Windows Live ID</para>
        /// <para>Display Name: Windows Live ID</para>
        /// </summary>
        [AttributeLogicalName("windowsliveid")]
        public string WindowsLiveID {
            get {
                return GetAttributeValue<string>("windowsliveid");
            }
            set {
                SetAttributeValue("windowsliveid", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer login email address</para>
        /// <para>Display Name: Yammer Email</para>
        /// </summary>
        [AttributeLogicalName("yammeremailaddress")]
        public string YammerEmailAddress {
            get {
                return GetAttributeValue<string>("yammeremailaddress");
            }
            set {
                SetAttributeValue("yammeremailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer ID</para>
        /// <para>Display Name: Yammer User ID</para>
        /// </summary>
        [AttributeLogicalName("yammeruserid")]
        public string YammerUserId {
            get {
                return GetAttributeValue<string>("yammeruserid");
            }
            set {
                SetAttributeValue("yammeruserid", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the first name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the full name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the last name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the middle name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Meeting Report</para>
        /// </summary>
        [AttributeLogicalName("dsn_meetingreport")]
        public EntityReference dsn_meetingreport {
            get {
                return GetAttributeValue<EntityReference>("dsn_meetingreport");
            }
            set {
                SetAttributeValue("dsn_meetingreport", value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_createdonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_createdby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_createdby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_modifiedby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("user_parent_user", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referenceduser_parent_user {
            get {
                return GetRelatedEntities<SystemUser>("user_parent_user", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("user_parent_user", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_createdonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_createdby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_modifiedby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentsystemuserid")]
        [RelationshipSchemaName("user_parent_user", EntityRole.Referencing)]
        public SystemUser Referencinguser_parent_user {
            get {
                return GetRelatedEntity<SystemUser>("user_parent_user", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("user_parent_user", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("contact_owning_user")]
        public IEnumerable<Contact> contact_owning_user {
            get {
                return GetRelatedEntities<Contact>("contact_owning_user", null);
            }
            set {
                SetRelatedEntities("contact_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_Account_RatedBy_SystemUser")]
        public IEnumerable<Account> dsn_Account_RatedBy_SystemUser {
            get {
                return GetRelatedEntities<Account>("dsn_Account_RatedBy_SystemUser", null);
            }
            set {
                SetRelatedEntities("dsn_Account_RatedBy_SystemUser", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_SensitiveDataAccess_ApprovedByUser_Sy")]
        public IEnumerable<dsn_SensitiveDataAccess> dsn_SensitiveDataAccess_ApprovedByUser_Sy {
            get {
                return GetRelatedEntities<dsn_SensitiveDataAccess>("dsn_SensitiveDataAccess_ApprovedByUser_Sy", null);
            }
            set {
                SetRelatedEntities("dsn_SensitiveDataAccess_ApprovedByUser_Sy", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_contracthandling_NordenPrimaryEmploye")]
        public IEnumerable<dsn_contracthandling> dsn_contracthandling_NordenPrimaryEmploye {
            get {
                return GetRelatedEntities<dsn_contracthandling>("dsn_contracthandling_NordenPrimaryEmploye", null);
            }
            set {
                SetRelatedEntities("dsn_contracthandling_NordenPrimaryEmploye", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_contracthandling_NordenSecondaryEmplo")]
        public IEnumerable<dsn_contracthandling> dsn_contracthandling_NordenSecondaryEmplo {
            get {
                return GetRelatedEntities<dsn_contracthandling>("dsn_contracthandling_NordenSecondaryEmplo", null);
            }
            set {
                SetRelatedEntities("dsn_contracthandling_NordenSecondaryEmplo", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_creditrisk_Ratedby_SystemUser")]
        public IEnumerable<dsn_creditrisk> dsn_creditrisk_Ratedby_SystemUser {
            get {
                return GetRelatedEntities<dsn_creditrisk>("dsn_creditrisk_Ratedby_SystemUser", null);
            }
            set {
                SetRelatedEntities("dsn_creditrisk_Ratedby_SystemUser", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_meetingreport")]
        [RelationshipSchemaName("dsn_meetingreport_dsn_user")]
        public dsn_meetingreport dsn_meetingreport_dsn_user {
            get {
                return GetRelatedEntity<dsn_meetingreport>("dsn_meetingreport_dsn_user", null);
            }
            set {
                SetRelatedEntity("dsn_meetingreport_dsn_user", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_createdby")]
        public IEnumerable<Account> lk_accountbase_createdby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
        public IEnumerable<Account> lk_accountbase_createdonbehalfby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_modifiedby")]
        public IEnumerable<Account> lk_accountbase_modifiedby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
        public IEnumerable<Account> lk_accountbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contact_createdonbehalfby")]
        public IEnumerable<Contact> lk_contact_createdonbehalfby {
            get {
                return GetRelatedEntities<Contact>("lk_contact_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contact_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
        public IEnumerable<Contact> lk_contact_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Contact>("lk_contact_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contact_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contactbase_createdby")]
        public IEnumerable<Contact> lk_contactbase_createdby {
            get {
                return GetRelatedEntities<Contact>("lk_contactbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_contactbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contactbase_modifiedby")]
        public IEnumerable<Contact> lk_contactbase_modifiedby {
            get {
                return GetRelatedEntities<Contact>("lk_contactbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_contactbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_charterparty_createdby")]
        public IEnumerable<dsn_charterparty> lk_dsn_charterparty_createdby {
            get {
                return GetRelatedEntities<dsn_charterparty>("lk_dsn_charterparty_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_charterparty_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_charterparty_createdonbehalfby")]
        public IEnumerable<dsn_charterparty> lk_dsn_charterparty_createdonbehalfby {
            get {
                return GetRelatedEntities<dsn_charterparty>("lk_dsn_charterparty_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_charterparty_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_charterparty_modifiedby")]
        public IEnumerable<dsn_charterparty> lk_dsn_charterparty_modifiedby {
            get {
                return GetRelatedEntities<dsn_charterparty>("lk_dsn_charterparty_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_charterparty_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_charterparty_modifiedonbehalfby")]
        public IEnumerable<dsn_charterparty> lk_dsn_charterparty_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dsn_charterparty>("lk_dsn_charterparty_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_charterparty_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_contracthandling_createdby")]
        public IEnumerable<dsn_contracthandling> lk_dsn_contracthandling_createdby {
            get {
                return GetRelatedEntities<dsn_contracthandling>("lk_dsn_contracthandling_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_contracthandling_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_contracthandling_createdonbehalfby")]
        public IEnumerable<dsn_contracthandling> lk_dsn_contracthandling_createdonbehalfby {
            get {
                return GetRelatedEntities<dsn_contracthandling>("lk_dsn_contracthandling_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_contracthandling_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_contracthandling_modifiedby")]
        public IEnumerable<dsn_contracthandling> lk_dsn_contracthandling_modifiedby {
            get {
                return GetRelatedEntities<dsn_contracthandling>("lk_dsn_contracthandling_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_contracthandling_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_contracthandling_modifiedonbehalfby")]
        public IEnumerable<dsn_contracthandling> lk_dsn_contracthandling_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dsn_contracthandling>("lk_dsn_contracthandling_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_contracthandling_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_creditrisk_createdby")]
        public IEnumerable<dsn_creditrisk> lk_dsn_creditrisk_createdby {
            get {
                return GetRelatedEntities<dsn_creditrisk>("lk_dsn_creditrisk_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_creditrisk_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_creditrisk_createdonbehalfby")]
        public IEnumerable<dsn_creditrisk> lk_dsn_creditrisk_createdonbehalfby {
            get {
                return GetRelatedEntities<dsn_creditrisk>("lk_dsn_creditrisk_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_creditrisk_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_creditrisk_modifiedby")]
        public IEnumerable<dsn_creditrisk> lk_dsn_creditrisk_modifiedby {
            get {
                return GetRelatedEntities<dsn_creditrisk>("lk_dsn_creditrisk_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_creditrisk_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_creditrisk_modifiedonbehalfby")]
        public IEnumerable<dsn_creditrisk> lk_dsn_creditrisk_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dsn_creditrisk>("lk_dsn_creditrisk_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_creditrisk_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_distirubutionlist_createdby")]
        public IEnumerable<dsn_DistirubutionList> lk_dsn_distirubutionlist_createdby {
            get {
                return GetRelatedEntities<dsn_DistirubutionList>("lk_dsn_distirubutionlist_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_distirubutionlist_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_distirubutionlist_createdonbehalfby")]
        public IEnumerable<dsn_DistirubutionList> lk_dsn_distirubutionlist_createdonbehalfby {
            get {
                return GetRelatedEntities<dsn_DistirubutionList>("lk_dsn_distirubutionlist_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_distirubutionlist_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_distirubutionlist_modifiedby")]
        public IEnumerable<dsn_DistirubutionList> lk_dsn_distirubutionlist_modifiedby {
            get {
                return GetRelatedEntities<dsn_DistirubutionList>("lk_dsn_distirubutionlist_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_distirubutionlist_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_distirubutionlist_modifiedonbehalfby")]
        public IEnumerable<dsn_DistirubutionList> lk_dsn_distirubutionlist_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dsn_DistirubutionList>("lk_dsn_distirubutionlist_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_distirubutionlist_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_employee_createdby")]
        public IEnumerable<dsn_Employee> lk_dsn_employee_createdby {
            get {
                return GetRelatedEntities<dsn_Employee>("lk_dsn_employee_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_employee_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_employee_createdonbehalfby")]
        public IEnumerable<dsn_Employee> lk_dsn_employee_createdonbehalfby {
            get {
                return GetRelatedEntities<dsn_Employee>("lk_dsn_employee_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_employee_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_employee_modifiedby")]
        public IEnumerable<dsn_Employee> lk_dsn_employee_modifiedby {
            get {
                return GetRelatedEntities<dsn_Employee>("lk_dsn_employee_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_employee_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_employee_modifiedonbehalfby")]
        public IEnumerable<dsn_Employee> lk_dsn_employee_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dsn_Employee>("lk_dsn_employee_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_employee_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_filehandling_createdby")]
        public IEnumerable<dsn_filehandling> lk_dsn_filehandling_createdby {
            get {
                return GetRelatedEntities<dsn_filehandling>("lk_dsn_filehandling_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_filehandling_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_filehandling_createdonbehalfby")]
        public IEnumerable<dsn_filehandling> lk_dsn_filehandling_createdonbehalfby {
            get {
                return GetRelatedEntities<dsn_filehandling>("lk_dsn_filehandling_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_filehandling_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_filehandling_modifiedby")]
        public IEnumerable<dsn_filehandling> lk_dsn_filehandling_modifiedby {
            get {
                return GetRelatedEntities<dsn_filehandling>("lk_dsn_filehandling_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_filehandling_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_filehandling_modifiedonbehalfby")]
        public IEnumerable<dsn_filehandling> lk_dsn_filehandling_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dsn_filehandling>("lk_dsn_filehandling_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_filehandling_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_industrialbulk_createdby")]
        public IEnumerable<dsn_industrialbulk> lk_dsn_industrialbulk_createdby {
            get {
                return GetRelatedEntities<dsn_industrialbulk>("lk_dsn_industrialbulk_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_industrialbulk_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_industrialbulk_createdonbehalfby")]
        public IEnumerable<dsn_industrialbulk> lk_dsn_industrialbulk_createdonbehalfby {
            get {
                return GetRelatedEntities<dsn_industrialbulk>("lk_dsn_industrialbulk_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_industrialbulk_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_industrialbulk_modifiedby")]
        public IEnumerable<dsn_industrialbulk> lk_dsn_industrialbulk_modifiedby {
            get {
                return GetRelatedEntities<dsn_industrialbulk>("lk_dsn_industrialbulk_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_industrialbulk_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_industrialbulk_modifiedonbehalfby")]
        public IEnumerable<dsn_industrialbulk> lk_dsn_industrialbulk_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dsn_industrialbulk>("lk_dsn_industrialbulk_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_industrialbulk_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_meetingreport_createdby")]
        public IEnumerable<dsn_meetingreport> lk_dsn_meetingreport_createdby {
            get {
                return GetRelatedEntities<dsn_meetingreport>("lk_dsn_meetingreport_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_meetingreport_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_meetingreport_createdonbehalfby")]
        public IEnumerable<dsn_meetingreport> lk_dsn_meetingreport_createdonbehalfby {
            get {
                return GetRelatedEntities<dsn_meetingreport>("lk_dsn_meetingreport_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_meetingreport_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_meetingreport_modifiedby")]
        public IEnumerable<dsn_meetingreport> lk_dsn_meetingreport_modifiedby {
            get {
                return GetRelatedEntities<dsn_meetingreport>("lk_dsn_meetingreport_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_meetingreport_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_meetingreport_modifiedonbehalfby")]
        public IEnumerable<dsn_meetingreport> lk_dsn_meetingreport_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dsn_meetingreport>("lk_dsn_meetingreport_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_meetingreport_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_sensitivedataaccess_createdby")]
        public IEnumerable<dsn_SensitiveDataAccess> lk_dsn_sensitivedataaccess_createdby {
            get {
                return GetRelatedEntities<dsn_SensitiveDataAccess>("lk_dsn_sensitivedataaccess_createdby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_sensitivedataaccess_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_sensitivedataaccess_createdonbehalfby")]
        public IEnumerable<dsn_SensitiveDataAccess> lk_dsn_sensitivedataaccess_createdonbehalfby {
            get {
                return GetRelatedEntities<dsn_SensitiveDataAccess>("lk_dsn_sensitivedataaccess_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_sensitivedataaccess_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_sensitivedataaccess_modifiedby")]
        public IEnumerable<dsn_SensitiveDataAccess> lk_dsn_sensitivedataaccess_modifiedby {
            get {
                return GetRelatedEntities<dsn_SensitiveDataAccess>("lk_dsn_sensitivedataaccess_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_sensitivedataaccess_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_dsn_sensitivedataaccess_modifiedonbehalfby")]
        public IEnumerable<dsn_SensitiveDataAccess> lk_dsn_sensitivedataaccess_modifiedonbehalfby {
            get {
                return GetRelatedEntities<dsn_SensitiveDataAccess>("lk_dsn_sensitivedataaccess_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_dsn_sensitivedataaccess_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_team_createdonbehalfby")]
        public IEnumerable<Team> lk_team_createdonbehalfby {
            get {
                return GetRelatedEntities<Team>("lk_team_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_team_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_team_modifiedonbehalfby")]
        public IEnumerable<Team> lk_team_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Team>("lk_team_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_team_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_teambase_administratorid")]
        public IEnumerable<Team> lk_teambase_administratorid {
            get {
                return GetRelatedEntities<Team>("lk_teambase_administratorid", null);
            }
            set {
                SetRelatedEntities("lk_teambase_administratorid", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_teambase_createdby")]
        public IEnumerable<Team> lk_teambase_createdby {
            get {
                return GetRelatedEntities<Team>("lk_teambase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_teambase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_teambase_modifiedby")]
        public IEnumerable<Team> lk_teambase_modifiedby {
            get {
                return GetRelatedEntities<Team>("lk_teambase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_teambase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_webresourcebase_createdonbehalfby")]
        public IEnumerable<WebResource> lk_webresourcebase_createdonbehalfby {
            get {
                return GetRelatedEntities<WebResource>("lk_webresourcebase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_webresourcebase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_webresourcebase_modifiedonbehalfby")]
        public IEnumerable<WebResource> lk_webresourcebase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<WebResource>("lk_webresourcebase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_webresourcebase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_accounts")]
        public IEnumerable<Account> system_user_accounts {
            get {
                return GetRelatedEntities<Account>("system_user_accounts", null);
            }
            set {
                SetRelatedEntities("system_user_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_contacts")]
        public IEnumerable<Contact> system_user_contacts {
            get {
                return GetRelatedEntities<Contact>("system_user_contacts", null);
            }
            set {
                SetRelatedEntities("system_user_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("teammembership_association")]
        public IEnumerable<Team> teammembership_association {
            get {
                return GetRelatedEntities<Team>("teammembership_association", null);
            }
            set {
                SetRelatedEntities("teammembership_association", null, value);
            }
        }
        
        [RelationshipSchemaName("user_accounts")]
        public IEnumerable<Account> user_accounts {
            get {
                return GetRelatedEntities<Account>("user_accounts", null);
            }
            set {
                SetRelatedEntities("user_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dsn_contracthandling")]
        public IEnumerable<dsn_contracthandling> user_dsn_contracthandling {
            get {
                return GetRelatedEntities<dsn_contracthandling>("user_dsn_contracthandling", null);
            }
            set {
                SetRelatedEntities("user_dsn_contracthandling", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dsn_distirubutionlist")]
        public IEnumerable<dsn_DistirubutionList> user_dsn_distirubutionlist {
            get {
                return GetRelatedEntities<dsn_DistirubutionList>("user_dsn_distirubutionlist", null);
            }
            set {
                SetRelatedEntities("user_dsn_distirubutionlist", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dsn_employee")]
        public IEnumerable<dsn_Employee> user_dsn_employee {
            get {
                return GetRelatedEntities<dsn_Employee>("user_dsn_employee", null);
            }
            set {
                SetRelatedEntities("user_dsn_employee", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dsn_filehandling")]
        public IEnumerable<dsn_filehandling> user_dsn_filehandling {
            get {
                return GetRelatedEntities<dsn_filehandling>("user_dsn_filehandling", null);
            }
            set {
                SetRelatedEntities("user_dsn_filehandling", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dsn_meetingreport")]
        public IEnumerable<dsn_meetingreport> user_dsn_meetingreport {
            get {
                return GetRelatedEntities<dsn_meetingreport>("user_dsn_meetingreport", null);
            }
            set {
                SetRelatedEntities("user_dsn_meetingreport", null, value);
            }
        }
        
        [RelationshipSchemaName("user_dsn_sensitivedataaccess")]
        public IEnumerable<dsn_SensitiveDataAccess> user_dsn_sensitivedataaccess {
            get {
                return GetRelatedEntities<dsn_SensitiveDataAccess>("user_dsn_sensitivedataaccess", null);
            }
            set {
                SetRelatedEntities("user_dsn_sensitivedataaccess", null, value);
            }
        }
        
        [RelationshipSchemaName("webresource_createdby")]
        public IEnumerable<WebResource> webresource_createdby {
            get {
                return GetRelatedEntities<WebResource>("webresource_createdby", null);
            }
            set {
                SetRelatedEntities("webresource_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("webresource_modifiedby")]
        public IEnumerable<WebResource> webresource_modifiedby {
            get {
                return GetRelatedEntities<WebResource>("webresource_modifiedby", null);
            }
            set {
                SetRelatedEntities("webresource_modifiedby", null, value);
            }
        }
        
        public static SystemUser Retrieve(IOrganizationService service, Guid id, params Expression<Func<SystemUser,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Collection of system users that routinely collaborate. Teams can be used to simplify record sharing and provide team members with common access to organization data when team members belong to different Business Units.</para>
    /// <para>Display Name: Team</para>
    /// </summary>
    [EntityLogicalName("team")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Team : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "team";
        
        public const int EntityTypeCode = 9;
        
        public Team() : 
                base(EntityLogicalName) {
        }
        
        public Team(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("teamid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("teamid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team.</para>
        /// <para>Display Name: Team</para>
        /// </summary>
        [AttributeLogicalName("teamid")]
        public Guid? TeamId {
            get {
                return GetAttributeValue<Guid?>("teamid");
            }
            set {
                SetId("teamid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user primary responsible for the team.</para>
        /// <para>Display Name: Administrator</para>
        /// </summary>
        [AttributeLogicalName("administratorid")]
        public EntityReference AdministratorId {
            get {
                return GetAttributeValue<EntityReference>("administratorid");
            }
            set {
                SetAttributeValue("administratorid", value);
            }
        }
        
        /// <summary>
        /// <para>The Azure active directory object Id for a group.</para>
        /// <para>Display Name: Azure AD Object Id for a group</para>
        /// </summary>
        [AttributeLogicalName("azureactivedirectoryobjectid")]
        public Guid? AzureActiveDirectoryObjectId {
            get {
                return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
            }
            set {
                SetAttributeValue("azureactivedirectoryobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the team is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the team.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the team was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the team.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Description of the team.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Email address for the team.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        public string EMailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the team with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the team is a default business unit team.</para>
        /// <para>Display Name: Is Default</para>
        /// </summary>
        [AttributeLogicalName("isdefault")]
        public bool? IsDefault {
            get {
                return GetAttributeValue<bool?>("isdefault");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the team.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the team was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the team.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the team.</para>
        /// <para>Display Name: Team Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the team.</para>
        /// <para>Display Name: Organization </para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default queue for the team.</para>
        /// <para>Display Name: Default Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        public EntityReference QueueId {
            get {
                return GetAttributeValue<EntityReference>("queueid");
            }
            set {
                SetAttributeValue("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the record that the team relates to.</para>
        /// <para>Display Name: Regarding Object Id</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the team will be managed by the system.</para>
        /// <para>Display Name: Is System Managed</para>
        /// </summary>
        [AttributeLogicalName("systemmanaged")]
        public bool? SystemManaged {
            get {
                return GetAttributeValue<bool?>("systemmanaged");
            }
        }
        
        /// <summary>
        /// <para>Shows the team template that is associated with the team.</para>
        /// <para>Display Name: Team Template Identifier</para>
        /// </summary>
        [AttributeLogicalName("teamtemplateid")]
        public EntityReference TeamTemplateId {
            get {
                return GetAttributeValue<EntityReference>("teamtemplateid");
            }
            set {
                SetAttributeValue("teamtemplateid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the team type.</para>
        /// <para>Display Name: Team Type</para>
        /// </summary>
        [AttributeLogicalName("teamtype")]
        public Team_TeamType? TeamType {
            get {
                return GetOptionSetValue<Team_TeamType>("teamtype");
            }
            set {
                SetOptionSetValue("teamtype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the team.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the team.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the full name of the team, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Name</para>
        /// </summary>
        [AttributeLogicalName("yominame")]
        public string YomiName {
            get {
                return GetAttributeValue<string>("yominame");
            }
            set {
                SetAttributeValue("yominame", value);
            }
        }
        
        [RelationshipSchemaName("dsn_SensitiveDataAccess_GrantedTeam_Team")]
        public IEnumerable<dsn_SensitiveDataAccess> dsn_SensitiveDataAccess_GrantedTeam_Team {
            get {
                return GetRelatedEntities<dsn_SensitiveDataAccess>("dsn_SensitiveDataAccess_GrantedTeam_Team", null);
            }
            set {
                SetRelatedEntities("dsn_SensitiveDataAccess_GrantedTeam_Team", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_team_createdonbehalfby")]
        public SystemUser lk_team_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_team_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_team_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_team_modifiedonbehalfby")]
        public SystemUser lk_team_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_team_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_team_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("administratorid")]
        [RelationshipSchemaName("lk_teambase_administratorid")]
        public SystemUser lk_teambase_administratorid {
            get {
                return GetRelatedEntity<SystemUser>("lk_teambase_administratorid", null);
            }
            set {
                SetRelatedEntity("lk_teambase_administratorid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_teambase_createdby")]
        public SystemUser lk_teambase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_teambase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_teambase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_teambase_modifiedby")]
        public SystemUser lk_teambase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_teambase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_teambase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("team_accounts")]
        public IEnumerable<Account> team_accounts {
            get {
                return GetRelatedEntities<Account>("team_accounts", null);
            }
            set {
                SetRelatedEntities("team_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("team_contacts")]
        public IEnumerable<Contact> team_contacts {
            get {
                return GetRelatedEntities<Contact>("team_contacts", null);
            }
            set {
                SetRelatedEntities("team_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dsn_contracthandling")]
        public IEnumerable<dsn_contracthandling> team_dsn_contracthandling {
            get {
                return GetRelatedEntities<dsn_contracthandling>("team_dsn_contracthandling", null);
            }
            set {
                SetRelatedEntities("team_dsn_contracthandling", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dsn_distirubutionlist")]
        public IEnumerable<dsn_DistirubutionList> team_dsn_distirubutionlist {
            get {
                return GetRelatedEntities<dsn_DistirubutionList>("team_dsn_distirubutionlist", null);
            }
            set {
                SetRelatedEntities("team_dsn_distirubutionlist", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dsn_employee")]
        public IEnumerable<dsn_Employee> team_dsn_employee {
            get {
                return GetRelatedEntities<dsn_Employee>("team_dsn_employee", null);
            }
            set {
                SetRelatedEntities("team_dsn_employee", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dsn_filehandling")]
        public IEnumerable<dsn_filehandling> team_dsn_filehandling {
            get {
                return GetRelatedEntities<dsn_filehandling>("team_dsn_filehandling", null);
            }
            set {
                SetRelatedEntities("team_dsn_filehandling", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dsn_meetingreport")]
        public IEnumerable<dsn_meetingreport> team_dsn_meetingreport {
            get {
                return GetRelatedEntities<dsn_meetingreport>("team_dsn_meetingreport", null);
            }
            set {
                SetRelatedEntities("team_dsn_meetingreport", null, value);
            }
        }
        
        [RelationshipSchemaName("team_dsn_sensitivedataaccess")]
        public IEnumerable<dsn_SensitiveDataAccess> team_dsn_sensitivedataaccess {
            get {
                return GetRelatedEntities<dsn_SensitiveDataAccess>("team_dsn_sensitivedataaccess", null);
            }
            set {
                SetRelatedEntities("team_dsn_sensitivedataaccess", null, value);
            }
        }
        
        [RelationshipSchemaName("teammembership_association")]
        public IEnumerable<SystemUser> teammembership_association {
            get {
                return GetRelatedEntities<SystemUser>("teammembership_association", null);
            }
            set {
                SetRelatedEntities("teammembership_association", null, value);
            }
        }
        
        public static Team Retrieve(IOrganizationService service, Guid id, params Expression<Func<Team,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [EntityLogicalName("teammembership")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class TeamMembership : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "teammembership";
        
        public const int EntityTypeCode = 23;
        
        public TeamMembership() : 
                base(EntityLogicalName) {
        }
        
        public TeamMembership(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("teammembershipid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("teammembershipid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team membership.</para>
        /// </summary>
        [AttributeLogicalName("teammembershipid")]
        public Guid? TeamMembershipId {
            get {
                return GetAttributeValue<Guid?>("teammembershipid");
            }
            set {
                SetId("teammembershipid", value);
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
        }
        
        [AttributeLogicalName("teamid")]
        public Guid? TeamId {
            get {
                return GetAttributeValue<Guid?>("teamid");
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        public static TeamMembership Retrieve(IOrganizationService service, Guid id, params Expression<Func<TeamMembership,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Data equivalent to files used in Web development. Web resources provide client-side components that are used to provide custom user interface elements.</para>
    /// <para>Display Name: Web Resource</para>
    /// </summary>
    [EntityLogicalName("webresource")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class WebResource : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "webresource";
        
        public const int EntityTypeCode = 9333;
        
        public WebResource() : 
                base(EntityLogicalName) {
        }
        
        public WebResource(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("webresourceid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("webresourceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the web resource.</para>
        /// <para>Display Name: Web Resource Identifier</para>
        /// </summary>
        [AttributeLogicalName("webresourceid")]
        public Guid? WebResourceId {
            get {
                return GetAttributeValue<Guid?>("webresourceid");
            }
            set {
                SetId("webresourceid", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether this component can be deleted.</para>
        /// <para>Display Name: Can Be Deleted</para>
        /// </summary>
        [AttributeLogicalName("canbedeleted")]
        public BooleanManagedProperty CanBeDeleted {
            get {
                return GetAttributeValue<BooleanManagedProperty>("canbedeleted");
            }
            set {
                SetAttributeValue("canbedeleted", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>Bytes of the web resource, in Base64 format.</para>
        /// </summary>
        [AttributeLogicalName("content")]
        public string Content {
            get {
                return GetAttributeValue<string>("content");
            }
            set {
                SetAttributeValue("content", value);
            }
        }
        
        /// <summary>
        /// <para>Json representation of the content of the resource.</para>
        /// </summary>
        [AttributeLogicalName("contentjson")]
        public string ContentJson {
            get {
                return GetAttributeValue<string>("contentjson");
            }
            set {
                SetAttributeValue("contentjson", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the web resource.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the web resource was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the web resource.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: DependencyXML</para>
        /// </summary>
        [AttributeLogicalName("dependencyxml")]
        public string DependencyXml {
            get {
                return GetAttributeValue<string>("dependencyxml");
            }
            set {
                SetAttributeValue("dependencyxml", value);
            }
        }
        
        /// <summary>
        /// <para>Description of the web resource.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Display name of the web resource.</para>
        /// <para>Display Name: Display Name</para>
        /// </summary>
        [AttributeLogicalName("displayname")]
        public string DisplayName {
            get {
                return GetAttributeValue<string>("displayname");
            }
            set {
                SetAttributeValue("displayname", value);
            }
        }
        
        /// <summary>
        /// <para>Version in which the form is introduced.</para>
        /// <para>Display Name: Introduced Version</para>
        /// </summary>
        [AttributeLogicalName("introducedversion")]
        public string IntroducedVersion {
            get {
                return GetAttributeValue<string>("introducedversion");
            }
            set {
                SetAttributeValue("introducedversion", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether this web resource is available for mobile client in offline mode.</para>
        /// <para>Display Name: Is Available For Mobile Offline</para>
        /// </summary>
        [AttributeLogicalName("isavailableformobileoffline")]
        public bool? IsAvailableForMobileOffline {
            get {
                return GetAttributeValue<bool?>("isavailableformobileoffline");
            }
            set {
                SetAttributeValue("isavailableformobileoffline", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether this component can be customized.</para>
        /// <para>Display Name: Customizable</para>
        /// </summary>
        [AttributeLogicalName("iscustomizable")]
        public BooleanManagedProperty IsCustomizable {
            get {
                return GetAttributeValue<BooleanManagedProperty>("iscustomizable");
            }
            set {
                SetAttributeValue("iscustomizable", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether this web resource is enabled for mobile client.</para>
        /// <para>Display Name: Is Enabled For Mobile Client</para>
        /// </summary>
        [AttributeLogicalName("isenabledformobileclient")]
        public bool? IsEnabledForMobileClient {
            get {
                return GetAttributeValue<bool?>("isenabledformobileclient");
            }
            set {
                SetAttributeValue("isenabledformobileclient", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether this component should be hidden.</para>
        /// <para>Display Name: Hidden</para>
        /// </summary>
        [AttributeLogicalName("ishidden")]
        public BooleanManagedProperty IsHidden {
            get {
                return GetAttributeValue<BooleanManagedProperty>("ishidden");
            }
            set {
                SetAttributeValue("ishidden", value);
            }
        }
        
        [AttributeLogicalName("ismanaged")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>Language of the web resource.</para>
        /// <para>Display Name: Language</para>
        /// </summary>
        [AttributeLogicalName("languagecode")]
        public int? LanguageCode {
            get {
                return GetAttributeValue<int?>("languagecode");
            }
            set {
                SetAttributeValue("languagecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the web resource.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the web resource was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the web resource.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the web resource.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the web resource.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Record Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Silverlight runtime version number required by a silverlight web resource.</para>
        /// <para>Display Name: Silverlight Version</para>
        /// </summary>
        [AttributeLogicalName("silverlightversion")]
        public string SilverlightVersion {
            get {
                return GetAttributeValue<string>("silverlightversion");
            }
            set {
                SetAttributeValue("silverlightversion", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("webresourceidunique")]
        public Guid? WebResourceIdUnique {
            get {
                return GetAttributeValue<Guid?>("webresourceidunique");
            }
        }
        
        /// <summary>
        /// <para>Drop-down list for selecting the type of the web resource.</para>
        /// <para>Display Name: Type</para>
        /// </summary>
        [AttributeLogicalName("webresourcetype")]
        public WebResource_WebResourceType? WebResourceType {
            get {
                return GetOptionSetValue<WebResource_WebResourceType>("webresourcetype");
            }
            set {
                SetOptionSetValue("webresourcetype", value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_webresourcebase_createdonbehalfby")]
        public SystemUser lk_webresourcebase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_webresourcebase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_webresourcebase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_webresourcebase_modifiedonbehalfby")]
        public SystemUser lk_webresourcebase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_webresourcebase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_webresourcebase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("webresource_createdby")]
        public SystemUser webresource_createdby {
            get {
                return GetRelatedEntity<SystemUser>("webresource_createdby", null);
            }
            set {
                SetRelatedEntity("webresource_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("webresource_modifiedby")]
        public SystemUser webresource_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("webresource_modifiedby", null);
            }
            set {
                SetRelatedEntity("webresource_modifiedby", null, value);
            }
        }
        
        public static WebResource Retrieve(IOrganizationService service, Guid id, params Expression<Func<WebResource,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Distirubution List</para>
    /// </summary>
    [EntityLogicalName("dsn_distirubutionlist")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dsn_DistirubutionList : ExtendedEntity<dsn_DistirubutionListState, dsn_DistirubutionList_statuscode> {
        
        public const string EntityLogicalName = "dsn_distirubutionlist";
        
        public const int EntityTypeCode = 10059;
        
        public dsn_DistirubutionList() : 
                base(EntityLogicalName) {
        }
        
        public dsn_DistirubutionList(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dsn_name");
            }
        }
        
        [AttributeLogicalName("dsn_distirubutionlistid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dsn_distirubutionlistid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Distirubution List</para>
        /// </summary>
        [AttributeLogicalName("dsn_distirubutionlistid")]
        public Guid? dsn_DistirubutionListId {
            get {
                return GetAttributeValue<Guid?>("dsn_distirubutionlistid");
            }
            set {
                SetId("dsn_distirubutionlistid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Required name field</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dsn_name")]
        public string dsn_Name {
            get {
                return GetAttributeValue<string>("dsn_name");
            }
            set {
                SetAttributeValue("dsn_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sedna ID </para>
        /// </summary>
        [AttributeLogicalName("dsn_sednaid")]
        public string dsn_SednaID {
            get {
                return GetAttributeValue<string>("dsn_sednaid");
            }
            set {
                SetAttributeValue("dsn_sednaid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Distirubution List</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dsn_DistirubutionListState? statecode {
            get {
                return GetOptionSetValue<dsn_DistirubutionListState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Distirubution List</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dsn_DistirubutionList_statuscode? statuscode {
            get {
                return GetOptionSetValue<dsn_DistirubutionList_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [RelationshipSchemaName("dsn_DistirubutionList_dsn_Account")]
        public IEnumerable<Account> dsn_DistirubutionList_dsn_Account {
            get {
                return GetRelatedEntities<Account>("dsn_DistirubutionList_dsn_Account", null);
            }
            set {
                SetRelatedEntities("dsn_DistirubutionList_dsn_Account", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_DistirubutionList_dsn_Contact")]
        public IEnumerable<Contact> dsn_DistirubutionList_dsn_Contact {
            get {
                return GetRelatedEntities<Contact>("dsn_DistirubutionList_dsn_Contact", null);
            }
            set {
                SetRelatedEntities("dsn_DistirubutionList_dsn_Contact", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_DistirubutionList_dsn_Employee")]
        public IEnumerable<dsn_Employee> dsn_DistirubutionList_dsn_Employee {
            get {
                return GetRelatedEntities<dsn_Employee>("dsn_DistirubutionList_dsn_Employee", null);
            }
            set {
                SetRelatedEntities("dsn_DistirubutionList_dsn_Employee", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dsn_distirubutionlist_createdby")]
        public SystemUser lk_dsn_distirubutionlist_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_distirubutionlist_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_distirubutionlist_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dsn_distirubutionlist_createdonbehalfby")]
        public SystemUser lk_dsn_distirubutionlist_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_distirubutionlist_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_distirubutionlist_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dsn_distirubutionlist_modifiedby")]
        public SystemUser lk_dsn_distirubutionlist_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_distirubutionlist_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_distirubutionlist_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dsn_distirubutionlist_modifiedonbehalfby")]
        public SystemUser lk_dsn_distirubutionlist_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_distirubutionlist_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_distirubutionlist_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dsn_distirubutionlist")]
        public Team team_dsn_distirubutionlist {
            get {
                return GetRelatedEntity<Team>("team_dsn_distirubutionlist", null);
            }
            set {
                SetRelatedEntity("team_dsn_distirubutionlist", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dsn_distirubutionlist")]
        public SystemUser user_dsn_distirubutionlist {
            get {
                return GetRelatedEntity<SystemUser>("user_dsn_distirubutionlist", null);
            }
            set {
                SetRelatedEntity("user_dsn_distirubutionlist", null, value);
            }
        }
        
        public static dsn_DistirubutionList Retrieve(IOrganizationService service, Guid id, params Expression<Func<dsn_DistirubutionList,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Employee</para>
    /// </summary>
    [EntityLogicalName("dsn_employee")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dsn_Employee : ExtendedEntity<dsn_EmployeeState, dsn_Employee_statuscode> {
        
        public const string EntityLogicalName = "dsn_employee";
        
        public const int EntityTypeCode = 10058;
        
        public dsn_Employee() : 
                base(EntityLogicalName) {
        }
        
        public dsn_Employee(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dsn_name");
            }
        }
        
        [AttributeLogicalName("dsn_employeeid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dsn_employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Employee</para>
        /// </summary>
        [AttributeLogicalName("dsn_employeeid")]
        public Guid? dsn_EmployeeId {
            get {
                return GetAttributeValue<Guid?>("dsn_employeeid");
            }
            set {
                SetId("dsn_employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Distirubution List</para>
        /// </summary>
        [AttributeLogicalName("dsn_distirubutionlist")]
        public EntityReference dsn_DistirubutionList {
            get {
                return GetAttributeValue<EntityReference>("dsn_distirubutionlist");
            }
            set {
                SetAttributeValue("dsn_distirubutionlist", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("dsn_email")]
        public string dsn_Email {
            get {
                return GetAttributeValue<string>("dsn_email");
            }
            set {
                SetAttributeValue("dsn_email", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: First name</para>
        /// </summary>
        [AttributeLogicalName("dsn_firstname")]
        public string dsn_Firstname {
            get {
                return GetAttributeValue<string>("dsn_firstname");
            }
            set {
                SetAttributeValue("dsn_firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Initials</para>
        /// </summary>
        [AttributeLogicalName("dsn_initials")]
        public string dsn_Initials {
            get {
                return GetAttributeValue<string>("dsn_initials");
            }
            set {
                SetAttributeValue("dsn_initials", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("dsn_lastname")]
        public string dsn_LastName {
            get {
                return GetAttributeValue<string>("dsn_lastname");
            }
            set {
                SetAttributeValue("dsn_lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Required name field</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dsn_name")]
        public string dsn_Name {
            get {
                return GetAttributeValue<string>("dsn_name");
            }
            set {
                SetAttributeValue("dsn_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sedna ID</para>
        /// </summary>
        [AttributeLogicalName("dsn_sednaid")]
        public string dsn_SednaID {
            get {
                return GetAttributeValue<string>("dsn_sednaid");
            }
            set {
                SetAttributeValue("dsn_sednaid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("dsn_title")]
        public string dsn_Title {
            get {
                return GetAttributeValue<string>("dsn_title");
            }
            set {
                SetAttributeValue("dsn_title", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Contract Handling</para>
        /// </summary>
        [AttributeLogicalName("dsn_contracthandling")]
        public EntityReference dsn_contracthandling {
            get {
                return GetAttributeValue<EntityReference>("dsn_contracthandling");
            }
            set {
                SetAttributeValue("dsn_contracthandling", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Credit Risk</para>
        /// </summary>
        [AttributeLogicalName("dsn_creditrisk")]
        public EntityReference dsn_creditrisk {
            get {
                return GetAttributeValue<EntityReference>("dsn_creditrisk");
            }
            set {
                SetAttributeValue("dsn_creditrisk", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Employee</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dsn_EmployeeState? statecode {
            get {
                return GetOptionSetValue<dsn_EmployeeState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Employee</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dsn_Employee_statuscode? statuscode {
            get {
                return GetOptionSetValue<dsn_Employee_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("dsn_distirubutionlist")]
        [RelationshipSchemaName("dsn_DistirubutionList_dsn_Employee")]
        public dsn_DistirubutionList dsn_DistirubutionList_dsn_Employee {
            get {
                return GetRelatedEntity<dsn_DistirubutionList>("dsn_DistirubutionList_dsn_Employee", null);
            }
            set {
                SetRelatedEntity("dsn_DistirubutionList_dsn_Employee", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_contracthandling")]
        [RelationshipSchemaName("dsn_contracthandling_dsn_employee")]
        public dsn_contracthandling dsn_contracthandling_dsn_employee {
            get {
                return GetRelatedEntity<dsn_contracthandling>("dsn_contracthandling_dsn_employee", null);
            }
            set {
                SetRelatedEntity("dsn_contracthandling_dsn_employee", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_creditrisk")]
        [RelationshipSchemaName("dsn_creditrisk_dsn_creditrisk_dsn_Employe")]
        public dsn_creditrisk dsn_creditrisk_dsn_creditrisk_dsn_Employe {
            get {
                return GetRelatedEntity<dsn_creditrisk>("dsn_creditrisk_dsn_creditrisk_dsn_Employe", null);
            }
            set {
                SetRelatedEntity("dsn_creditrisk_dsn_creditrisk_dsn_Employe", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dsn_employee_createdby")]
        public SystemUser lk_dsn_employee_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_employee_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_employee_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dsn_employee_createdonbehalfby")]
        public SystemUser lk_dsn_employee_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_employee_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_employee_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dsn_employee_modifiedby")]
        public SystemUser lk_dsn_employee_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_employee_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_employee_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dsn_employee_modifiedonbehalfby")]
        public SystemUser lk_dsn_employee_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_employee_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_employee_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dsn_employee")]
        public Team team_dsn_employee {
            get {
                return GetRelatedEntity<Team>("team_dsn_employee", null);
            }
            set {
                SetRelatedEntity("team_dsn_employee", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dsn_employee")]
        public SystemUser user_dsn_employee {
            get {
                return GetRelatedEntity<SystemUser>("user_dsn_employee", null);
            }
            set {
                SetRelatedEntity("user_dsn_employee", null, value);
            }
        }
        
        public static dsn_Employee Retrieve(IOrganizationService service, Guid id, params Expression<Func<dsn_Employee,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Sensitive Data Access</para>
    /// </summary>
    [EntityLogicalName("dsn_sensitivedataaccess")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dsn_SensitiveDataAccess : ExtendedEntity<dsn_SensitiveDataAccessState, dsn_SensitiveDataAccess_statuscode> {
        
        public const string EntityLogicalName = "dsn_sensitivedataaccess";
        
        public const int EntityTypeCode = 10060;
        
        public dsn_SensitiveDataAccess() : 
                base(EntityLogicalName) {
        }
        
        public dsn_SensitiveDataAccess(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dsn_name");
            }
        }
        
        [AttributeLogicalName("dsn_sensitivedataaccessid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dsn_sensitivedataaccessid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Sensitive Data Access</para>
        /// </summary>
        [AttributeLogicalName("dsn_sensitivedataaccessid")]
        public Guid? dsn_SensitiveDataAccessId {
            get {
                return GetAttributeValue<Guid?>("dsn_sensitivedataaccessid");
            }
            set {
                SetId("dsn_sensitivedataaccessid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Approved By User</para>
        /// </summary>
        [AttributeLogicalName("dsn_approvedbyuser")]
        public EntityReference dsn_ApprovedByUser {
            get {
                return GetAttributeValue<EntityReference>("dsn_approvedbyuser");
            }
            set {
                SetAttributeValue("dsn_approvedbyuser", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Date Approved</para>
        /// </summary>
        [AttributeLogicalName("dsn_dateapproved")]
        public DateTime? dsn_DateApproved {
            get {
                return GetAttributeValue<DateTime?>("dsn_dateapproved");
            }
            set {
                SetAttributeValue("dsn_dateapproved", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Granted Team</para>
        /// </summary>
        [AttributeLogicalName("dsn_grantedteam")]
        public EntityReference dsn_GrantedTeam {
            get {
                return GetAttributeValue<EntityReference>("dsn_grantedteam");
            }
            set {
                SetAttributeValue("dsn_grantedteam", value);
            }
        }
        
        /// <summary>
        /// <para>Required name field</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dsn_name")]
        public string dsn_Name {
            get {
                return GetAttributeValue<string>("dsn_name");
            }
            set {
                SetAttributeValue("dsn_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Related Account</para>
        /// </summary>
        [AttributeLogicalName("dsn_relatedaccount")]
        public EntityReference dsn_RelatedAccount {
            get {
                return GetAttributeValue<EntityReference>("dsn_relatedaccount");
            }
            set {
                SetAttributeValue("dsn_relatedaccount", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Sensitive Data Access</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dsn_SensitiveDataAccessState? statecode {
            get {
                return GetOptionSetValue<dsn_SensitiveDataAccessState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Sensitive Data Access</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dsn_SensitiveDataAccess_statuscode? statuscode {
            get {
                return GetOptionSetValue<dsn_SensitiveDataAccess_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("dsn_approvedbyuser")]
        [RelationshipSchemaName("dsn_SensitiveDataAccess_ApprovedByUser_Sy")]
        public SystemUser dsn_SensitiveDataAccess_ApprovedByUser_Sy {
            get {
                return GetRelatedEntity<SystemUser>("dsn_SensitiveDataAccess_ApprovedByUser_Sy", null);
            }
            set {
                SetRelatedEntity("dsn_SensitiveDataAccess_ApprovedByUser_Sy", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_grantedteam")]
        [RelationshipSchemaName("dsn_SensitiveDataAccess_GrantedTeam_Team")]
        public Team dsn_SensitiveDataAccess_GrantedTeam_Team {
            get {
                return GetRelatedEntity<Team>("dsn_SensitiveDataAccess_GrantedTeam_Team", null);
            }
            set {
                SetRelatedEntity("dsn_SensitiveDataAccess_GrantedTeam_Team", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_relatedaccount")]
        [RelationshipSchemaName("dsn_SensitiveDataAccess_RelatedAccount_Ac")]
        public Account dsn_SensitiveDataAccess_RelatedAccount_Ac {
            get {
                return GetRelatedEntity<Account>("dsn_SensitiveDataAccess_RelatedAccount_Ac", null);
            }
            set {
                SetRelatedEntity("dsn_SensitiveDataAccess_RelatedAccount_Ac", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dsn_sensitivedataaccess_createdby")]
        public SystemUser lk_dsn_sensitivedataaccess_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_sensitivedataaccess_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_sensitivedataaccess_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dsn_sensitivedataaccess_createdonbehalfby")]
        public SystemUser lk_dsn_sensitivedataaccess_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_sensitivedataaccess_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_sensitivedataaccess_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dsn_sensitivedataaccess_modifiedby")]
        public SystemUser lk_dsn_sensitivedataaccess_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_sensitivedataaccess_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_sensitivedataaccess_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dsn_sensitivedataaccess_modifiedonbehalfby")]
        public SystemUser lk_dsn_sensitivedataaccess_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_sensitivedataaccess_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_sensitivedataaccess_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dsn_sensitivedataaccess")]
        public Team team_dsn_sensitivedataaccess {
            get {
                return GetRelatedEntity<Team>("team_dsn_sensitivedataaccess", null);
            }
            set {
                SetRelatedEntity("team_dsn_sensitivedataaccess", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dsn_sensitivedataaccess")]
        public SystemUser user_dsn_sensitivedataaccess {
            get {
                return GetRelatedEntity<SystemUser>("user_dsn_sensitivedataaccess", null);
            }
            set {
                SetRelatedEntity("user_dsn_sensitivedataaccess", null, value);
            }
        }
        
        public static dsn_SensitiveDataAccess Retrieve(IOrganizationService service, Guid id, params Expression<Func<dsn_SensitiveDataAccess,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Charter Party</para>
    /// </summary>
    [EntityLogicalName("dsn_charterparty")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dsn_charterparty : ExtendedEntity<dsn_charterpartyState, dsn_charterparty_statuscode> {
        
        public const string EntityLogicalName = "dsn_charterparty";
        
        public const int EntityTypeCode = 10056;
        
        public dsn_charterparty() : 
                base(EntityLogicalName) {
        }
        
        public dsn_charterparty(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dsn_name");
            }
        }
        
        [AttributeLogicalName("dsn_charterpartyid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dsn_charterpartyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Charter Party</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartyid")]
        public Guid? dsn_charterpartyId {
            get {
                return GetAttributeValue<Guid?>("dsn_charterpartyid");
            }
            set {
                SetId("dsn_charterpartyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Broker</para>
        /// </summary>
        [AttributeLogicalName("dsn_broker")]
        public EntityReference dsn_Broker {
            get {
                return GetAttributeValue<EntityReference>("dsn_broker");
            }
            set {
                SetAttributeValue("dsn_broker", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: CP Contact</para>
        /// </summary>
        [AttributeLogicalName("dsn_cpcontact")]
        public EntityReference dsn_CPContact {
            get {
                return GetAttributeValue<EntityReference>("dsn_cpcontact");
            }
            set {
                SetAttributeValue("dsn_cpcontact", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: CP Date</para>
        /// </summary>
        [AttributeLogicalName("dsn_cpdate")]
        public DateTime? dsn_CPDate {
            get {
                return GetAttributeValue<DateTime?>("dsn_cpdate");
            }
            set {
                SetAttributeValue("dsn_cpdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Chtr Specialist</para>
        /// </summary>
        [AttributeLogicalName("dsn_chtrspecialist")]
        public string dsn_ChtrSpecialist {
            get {
                return GetAttributeValue<string>("dsn_chtrspecialist");
            }
            set {
                SetAttributeValue("dsn_chtrspecialist", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Counterparty</para>
        /// </summary>
        [AttributeLogicalName("dsn_counterparty")]
        public EntityReference dsn_Counterparty {
            get {
                return GetAttributeValue<EntityReference>("dsn_counterparty");
            }
            set {
                SetAttributeValue("dsn_counterparty", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Created on (IMOS)</para>
        /// </summary>
        [AttributeLogicalName("dsn_createdonimos")]
        public DateTime? dsn_CreatedonIMOS {
            get {
                return GetAttributeValue<DateTime?>("dsn_createdonimos");
            }
            set {
                SetAttributeValue("dsn_createdonimos", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Department</para>
        /// </summary>
        [AttributeLogicalName("dsn_department")]
        public string dsn_Department {
            get {
                return GetAttributeValue<string>("dsn_department");
            }
            set {
                SetAttributeValue("dsn_department", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Fixture Reference</para>
        /// </summary>
        [AttributeLogicalName("dsn_fixturereference")]
        public string dsn_FixtureReference {
            get {
                return GetAttributeValue<string>("dsn_fixturereference");
            }
            set {
                SetAttributeValue("dsn_fixturereference", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Fixture Status</para>
        /// </summary>
        [AttributeLogicalName("dsn_fixturestatus")]
        public string dsn_FixtureStatus {
            get {
                return GetAttributeValue<string>("dsn_fixturestatus");
            }
            set {
                SetAttributeValue("dsn_fixturestatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Fixture Type</para>
        /// </summary>
        [AttributeLogicalName("dsn_fixturetype")]
        public string dsn_FixtureType {
            get {
                return GetAttributeValue<string>("dsn_fixturetype");
            }
            set {
                SetAttributeValue("dsn_fixturetype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: LOB</para>
        /// </summary>
        [AttributeLogicalName("dsn_lob")]
        public string dsn_LOB {
            get {
                return GetAttributeValue<string>("dsn_lob");
            }
            set {
                SetAttributeValue("dsn_lob", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Related Cargo ID</para>
        /// </summary>
        [AttributeLogicalName("dsn_relatedcargoid")]
        public EntityReference dsn_RelatedCargoID {
            get {
                return GetAttributeValue<EntityReference>("dsn_relatedcargoid");
            }
            set {
                SetAttributeValue("dsn_relatedcargoid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Related Coa ID</para>
        /// </summary>
        [AttributeLogicalName("dsn_relatedcoaid")]
        public EntityReference dsn_RelatedCoaID {
            get {
                return GetAttributeValue<EntityReference>("dsn_relatedcoaid");
            }
            set {
                SetAttributeValue("dsn_relatedcoaid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Vessel</para>
        /// </summary>
        [AttributeLogicalName("dsn_vessel")]
        public string dsn_Vessel {
            get {
                return GetAttributeValue<string>("dsn_vessel");
            }
            set {
                SetAttributeValue("dsn_vessel", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: IMOS Reference</para>
        /// </summary>
        [AttributeLogicalName("dsn_name")]
        public string dsn_name {
            get {
                return GetAttributeValue<string>("dsn_name");
            }
            set {
                SetAttributeValue("dsn_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Charter Party</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dsn_charterpartyState? statecode {
            get {
                return GetOptionSetValue<dsn_charterpartyState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Charter Party</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dsn_charterparty_statuscode? statuscode {
            get {
                return GetOptionSetValue<dsn_charterparty_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [RelationshipSchemaName("dsn_charterparty_RelatedCargoID_dsn_chart", EntityRole.Referenced)]
        public IEnumerable<dsn_charterparty> Referenceddsn_charterparty_RelatedCargoID_dsn_chart {
            get {
                return GetRelatedEntities<dsn_charterparty>("dsn_charterparty_RelatedCargoID_dsn_chart", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("dsn_charterparty_RelatedCargoID_dsn_chart", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("dsn_charterparty_RelatedCoaID_dsn_charter", EntityRole.Referenced)]
        public IEnumerable<dsn_charterparty> Referenceddsn_charterparty_RelatedCoaID_dsn_charter {
            get {
                return GetRelatedEntities<dsn_charterparty>("dsn_charterparty_RelatedCoaID_dsn_charter", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("dsn_charterparty_RelatedCoaID_dsn_charter", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("dsn_relatedcargoid")]
        [RelationshipSchemaName("dsn_charterparty_RelatedCargoID_dsn_chart", EntityRole.Referencing)]
        public dsn_charterparty Referencingdsn_charterparty_RelatedCargoID_dsn_chart {
            get {
                return GetRelatedEntity<dsn_charterparty>("dsn_charterparty_RelatedCargoID_dsn_chart", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("dsn_charterparty_RelatedCargoID_dsn_chart", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("dsn_relatedcoaid")]
        [RelationshipSchemaName("dsn_charterparty_RelatedCoaID_dsn_charter", EntityRole.Referencing)]
        public dsn_charterparty Referencingdsn_charterparty_RelatedCoaID_dsn_charter {
            get {
                return GetRelatedEntity<dsn_charterparty>("dsn_charterparty_RelatedCoaID_dsn_charter", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("dsn_charterparty_RelatedCoaID_dsn_charter", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("dsn_broker")]
        [RelationshipSchemaName("dsn_charterparty_Broker_Account")]
        public Account dsn_charterparty_Broker_Account {
            get {
                return GetRelatedEntity<Account>("dsn_charterparty_Broker_Account", null);
            }
            set {
                SetRelatedEntity("dsn_charterparty_Broker_Account", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_cpcontact")]
        [RelationshipSchemaName("dsn_charterparty_CPContact_Contact")]
        public Contact dsn_charterparty_CPContact_Contact {
            get {
                return GetRelatedEntity<Contact>("dsn_charterparty_CPContact_Contact", null);
            }
            set {
                SetRelatedEntity("dsn_charterparty_CPContact_Contact", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_counterparty")]
        [RelationshipSchemaName("dsn_charterparty_Counterparty_Account")]
        public Account dsn_charterparty_Counterparty_Account {
            get {
                return GetRelatedEntity<Account>("dsn_charterparty_Counterparty_Account", null);
            }
            set {
                SetRelatedEntity("dsn_charterparty_Counterparty_Account", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_filehandling_CharterPartyRelatedChart")]
        public IEnumerable<dsn_filehandling> dsn_filehandling_CharterPartyRelatedChart {
            get {
                return GetRelatedEntities<dsn_filehandling>("dsn_filehandling_CharterPartyRelatedChart", null);
            }
            set {
                SetRelatedEntities("dsn_filehandling_CharterPartyRelatedChart", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dsn_charterparty_createdby")]
        public SystemUser lk_dsn_charterparty_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_charterparty_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_charterparty_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dsn_charterparty_createdonbehalfby")]
        public SystemUser lk_dsn_charterparty_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_charterparty_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_charterparty_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dsn_charterparty_modifiedby")]
        public SystemUser lk_dsn_charterparty_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_charterparty_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_charterparty_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dsn_charterparty_modifiedonbehalfby")]
        public SystemUser lk_dsn_charterparty_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_charterparty_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_charterparty_modifiedonbehalfby", null, value);
            }
        }
        
        public static dsn_charterparty Retrieve(IOrganizationService service, Guid id, params Expression<Func<dsn_charterparty,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Contract Handling</para>
    /// </summary>
    [EntityLogicalName("dsn_contracthandling")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dsn_contracthandling : ExtendedEntity<dsn_contracthandlingState, dsn_contracthandling_statuscode> {
        
        public const string EntityLogicalName = "dsn_contracthandling";
        
        public const int EntityTypeCode = 10054;
        
        public dsn_contracthandling() : 
                base(EntityLogicalName) {
        }
        
        public dsn_contracthandling(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dsn_name");
            }
        }
        
        [AttributeLogicalName("dsn_contracthandlingid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dsn_contracthandlingid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Contract Handling</para>
        /// </summary>
        [AttributeLogicalName("dsn_contracthandlingid")]
        public Guid? dsn_contracthandlingId {
            get {
                return GetAttributeValue<Guid?>("dsn_contracthandlingid");
            }
            set {
                SetId("dsn_contracthandlingid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Date for Needed Action</para>
        /// </summary>
        [AttributeLogicalName("dsn_dateforneededaction")]
        public DateTime? dsn_DateforNeededAction {
            get {
                return GetAttributeValue<DateTime?>("dsn_dateforneededaction");
            }
            set {
                SetAttributeValue("dsn_dateforneededaction", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: End Date</para>
        /// </summary>
        [AttributeLogicalName("dsn_enddate")]
        public DateTime? dsn_EndDate {
            get {
                return GetAttributeValue<DateTime?>("dsn_enddate");
            }
            set {
                SetAttributeValue("dsn_enddate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Norden Primary Employee</para>
        /// </summary>
        [AttributeLogicalName("dsn_nordenprimaryemployee")]
        public EntityReference dsn_NordenPrimaryEmployee {
            get {
                return GetAttributeValue<EntityReference>("dsn_nordenprimaryemployee");
            }
            set {
                SetAttributeValue("dsn_nordenprimaryemployee", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Norden Secondary Employee</para>
        /// </summary>
        [AttributeLogicalName("dsn_nordensecondaryemployee")]
        public EntityReference dsn_NordenSecondaryEmployee {
            get {
                return GetAttributeValue<EntityReference>("dsn_nordensecondaryemployee");
            }
            set {
                SetAttributeValue("dsn_nordensecondaryemployee", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("dsn_startdate")]
        public DateTime? dsn_StartDate {
            get {
                return GetAttributeValue<DateTime?>("dsn_startdate");
            }
            set {
                SetAttributeValue("dsn_startdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Supplier</para>
        /// </summary>
        [AttributeLogicalName("dsn_supplier")]
        public EntityReference dsn_Supplier {
            get {
                return GetAttributeValue<EntityReference>("dsn_supplier");
            }
            set {
                SetAttributeValue("dsn_supplier", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Contract Name</para>
        /// </summary>
        [AttributeLogicalName("dsn_name")]
        public string dsn_name {
            get {
                return GetAttributeValue<string>("dsn_name");
            }
            set {
                SetAttributeValue("dsn_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Contract Handling</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dsn_contracthandlingState? statecode {
            get {
                return GetOptionSetValue<dsn_contracthandlingState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Contract Handling</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dsn_contracthandling_statuscode? statuscode {
            get {
                return GetOptionSetValue<dsn_contracthandling_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("dsn_nordenprimaryemployee")]
        [RelationshipSchemaName("dsn_contracthandling_NordenPrimaryEmploye")]
        public SystemUser dsn_contracthandling_NordenPrimaryEmploye {
            get {
                return GetRelatedEntity<SystemUser>("dsn_contracthandling_NordenPrimaryEmploye", null);
            }
            set {
                SetRelatedEntity("dsn_contracthandling_NordenPrimaryEmploye", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_nordensecondaryemployee")]
        [RelationshipSchemaName("dsn_contracthandling_NordenSecondaryEmplo")]
        public SystemUser dsn_contracthandling_NordenSecondaryEmplo {
            get {
                return GetRelatedEntity<SystemUser>("dsn_contracthandling_NordenSecondaryEmplo", null);
            }
            set {
                SetRelatedEntity("dsn_contracthandling_NordenSecondaryEmplo", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_supplier")]
        [RelationshipSchemaName("dsn_contracthandling_Supplier_Account")]
        public Account dsn_contracthandling_Supplier_Account {
            get {
                return GetRelatedEntity<Account>("dsn_contracthandling_Supplier_Account", null);
            }
            set {
                SetRelatedEntity("dsn_contracthandling_Supplier_Account", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_contracthandling_dsn_contracthandling")]
        public IEnumerable<Contact> dsn_contracthandling_dsn_contracthandling {
            get {
                return GetRelatedEntities<Contact>("dsn_contracthandling_dsn_contracthandling", null);
            }
            set {
                SetRelatedEntities("dsn_contracthandling_dsn_contracthandling", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_contracthandling_dsn_employee")]
        public IEnumerable<dsn_Employee> dsn_contracthandling_dsn_employee {
            get {
                return GetRelatedEntities<dsn_Employee>("dsn_contracthandling_dsn_employee", null);
            }
            set {
                SetRelatedEntities("dsn_contracthandling_dsn_employee", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_filehandling_ContractHandlingLookup_d")]
        public IEnumerable<dsn_filehandling> dsn_filehandling_ContractHandlingLookup_d {
            get {
                return GetRelatedEntities<dsn_filehandling>("dsn_filehandling_ContractHandlingLookup_d", null);
            }
            set {
                SetRelatedEntities("dsn_filehandling_ContractHandlingLookup_d", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dsn_contracthandling_createdby")]
        public SystemUser lk_dsn_contracthandling_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_contracthandling_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_contracthandling_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dsn_contracthandling_createdonbehalfby")]
        public SystemUser lk_dsn_contracthandling_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_contracthandling_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_contracthandling_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dsn_contracthandling_modifiedby")]
        public SystemUser lk_dsn_contracthandling_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_contracthandling_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_contracthandling_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dsn_contracthandling_modifiedonbehalfby")]
        public SystemUser lk_dsn_contracthandling_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_contracthandling_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_contracthandling_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dsn_contracthandling")]
        public Team team_dsn_contracthandling {
            get {
                return GetRelatedEntity<Team>("team_dsn_contracthandling", null);
            }
            set {
                SetRelatedEntity("team_dsn_contracthandling", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dsn_contracthandling")]
        public SystemUser user_dsn_contracthandling {
            get {
                return GetRelatedEntity<SystemUser>("user_dsn_contracthandling", null);
            }
            set {
                SetRelatedEntity("user_dsn_contracthandling", null, value);
            }
        }
        
        public static dsn_contracthandling Retrieve(IOrganizationService service, Guid id, params Expression<Func<dsn_contracthandling,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Credit Risk</para>
    /// </summary>
    [EntityLogicalName("dsn_creditrisk")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dsn_creditrisk : ExtendedEntity<dsn_creditriskState, dsn_creditrisk_statuscode> {
        
        public const string EntityLogicalName = "dsn_creditrisk";
        
        public const int EntityTypeCode = 10055;
        
        public dsn_creditrisk() : 
                base(EntityLogicalName) {
        }
        
        public dsn_creditrisk(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dsn_name");
            }
        }
        
        [AttributeLogicalName("dsn_creditriskid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dsn_creditriskid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Credit Risk</para>
        /// </summary>
        [AttributeLogicalName("dsn_creditriskid")]
        public Guid? dsn_creditriskId {
            get {
                return GetAttributeValue<Guid?>("dsn_creditriskid");
            }
            set {
                SetId("dsn_creditriskid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Business type (Company)</para>
        /// </summary>
        [AttributeLogicalName("dsn_businesstypecompany")]
        public dsn_businesstypecompany? dsn_BusinesstypeCompany {
            get {
                return GetOptionSetValue<dsn_businesstypecompany>("dsn_businesstypecompany");
            }
            set {
                SetOptionSetValue("dsn_businesstypecompany", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Business type (Parent)</para>
        /// </summary>
        [AttributeLogicalName("dsn_businesstypeparent")]
        public dsn_businesstypecompany? dsn_BusinesstypeParent {
            get {
                return GetOptionSetValue<dsn_businesstypecompany>("dsn_businesstypeparent");
            }
            set {
                SetOptionSetValue("dsn_businesstypeparent", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Comments</para>
        /// </summary>
        [AttributeLogicalName("dsn_comments")]
        public string dsn_Comments {
            get {
                return GetAttributeValue<string>("dsn_comments");
            }
            set {
                SetAttributeValue("dsn_comments", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Contract Type</para>
        /// </summary>
        [AttributeLogicalName("dsn_contracttype")]
        public string dsn_ContractType {
            get {
                return GetAttributeValue<string>("dsn_contracttype");
            }
            set {
                SetAttributeValue("dsn_contracttype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Convert from SharePoint</para>
        /// </summary>
        [AttributeLogicalName("dsn_convertfromsharepoint")]
        public bool? dsn_ConvertfromSharePoint {
            get {
                return GetAttributeValue<bool?>("dsn_convertfromsharepoint");
            }
            set {
                SetAttributeValue("dsn_convertfromsharepoint", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Core business activities</para>
        /// </summary>
        [AttributeLogicalName("dsn_corebusinessactivities")]
        public string dsn_Corebusinessactivities {
            get {
                return GetAttributeValue<string>("dsn_corebusinessactivities");
            }
            set {
                SetAttributeValue("dsn_corebusinessactivities", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Date of Rating</para>
        /// </summary>
        [AttributeLogicalName("dsn_dateofrating")]
        public DateTime? dsn_DateofRating {
            get {
                return GetAttributeValue<DateTime?>("dsn_dateofrating");
            }
            set {
                SetAttributeValue("dsn_dateofrating", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Deadline</para>
        /// </summary>
        [AttributeLogicalName("dsn_deadline")]
        public string dsn_Deadline {
            get {
                return GetAttributeValue<string>("dsn_deadline");
            }
            set {
                SetAttributeValue("dsn_deadline", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Declined Comment</para>
        /// </summary>
        [AttributeLogicalName("dsn_declinedcomment")]
        public string dsn_DeclinedComment {
            get {
                return GetAttributeValue<string>("dsn_declinedcomment");
            }
            set {
                SetAttributeValue("dsn_declinedcomment", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Direct Link to Credit risk assesment in CRM</para>
        /// </summary>
        [AttributeLogicalName("dsn_directlinktocreditriskassesmentincrm")]
        public string dsn_DirectLinktoCreditriskassesmentinCRM {
            get {
                return GetAttributeValue<string>("dsn_directlinktocreditriskassesmentincrm");
            }
            set {
                SetAttributeValue("dsn_directlinktocreditriskassesmentincrm", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Expiration date</para>
        /// </summary>
        [AttributeLogicalName("dsn_expirationdate")]
        public DateTime? dsn_Expirationdate {
            get {
                return GetAttributeValue<DateTime?>("dsn_expirationdate");
            }
            set {
                SetAttributeValue("dsn_expirationdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Ownership structure</para>
        /// </summary>
        [AttributeLogicalName("dsn_ownershipstructure")]
        public dsn_ownershipstructure? dsn_Ownershipstructure {
            get {
                return GetOptionSetValue<dsn_ownershipstructure>("dsn_ownershipstructure");
            }
            set {
                SetOptionSetValue("dsn_ownershipstructure", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Previous rating</para>
        /// </summary>
        [AttributeLogicalName("dsn_previousrating")]
        public string dsn_Previousrating {
            get {
                return GetAttributeValue<string>("dsn_previousrating");
            }
            set {
                SetAttributeValue("dsn_previousrating", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Previous rating date</para>
        /// </summary>
        [AttributeLogicalName("dsn_previousratingdate")]
        public DateTime? dsn_Previousratingdate {
            get {
                return GetAttributeValue<DateTime?>("dsn_previousratingdate");
            }
            set {
                SetAttributeValue("dsn_previousratingdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Rated by (Initials)</para>
        /// </summary>
        [AttributeLogicalName("dsn_ratedby")]
        public EntityReference dsn_Ratedby {
            get {
                return GetAttributeValue<EntityReference>("dsn_ratedby");
            }
            set {
                SetAttributeValue("dsn_ratedby", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Rating</para>
        /// </summary>
        [AttributeLogicalName("dsn_rating")]
        public dsn_rating? dsn_Rating {
            get {
                return GetOptionSetValue<dsn_rating>("dsn_rating");
            }
            set {
                SetOptionSetValue("dsn_rating", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: User notified on approval</para>
        /// </summary>
        [AttributeLogicalName("dsn_usernotifiedonapproval")]
        public bool? dsn_Usernotifiedonapproval {
            get {
                return GetAttributeValue<bool?>("dsn_usernotifiedonapproval");
            }
            set {
                SetAttributeValue("dsn_usernotifiedonapproval", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Credit Risk</para>
        /// </summary>
        [AttributeLogicalName("dsn_account_creditrisk_id")]
        public EntityReference dsn_account_creditrisk_id {
            get {
                return GetAttributeValue<EntityReference>("dsn_account_creditrisk_id");
            }
            set {
                SetAttributeValue("dsn_account_creditrisk_id", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dsn_name")]
        public string dsn_name {
            get {
                return GetAttributeValue<string>("dsn_name");
            }
            set {
                SetAttributeValue("dsn_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Company Info</para>
        /// </summary>
        [AttributeLogicalName("dsn_textarea_companyinfo")]
        public string dsn_textarea_CompanyInfo {
            get {
                return GetAttributeValue<string>("dsn_textarea_companyinfo");
            }
            set {
                SetAttributeValue("dsn_textarea_companyinfo", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Assesment</para>
        /// </summary>
        [AttributeLogicalName("dsn_textarea_assesment")]
        public string dsn_textarea_assesment {
            get {
                return GetAttributeValue<string>("dsn_textarea_assesment");
            }
            set {
                SetAttributeValue("dsn_textarea_assesment", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Credit Risk</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dsn_creditriskState? statecode {
            get {
                return GetOptionSetValue<dsn_creditriskState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Credit Risk</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dsn_creditrisk_statuscode? statuscode {
            get {
                return GetOptionSetValue<dsn_creditrisk_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("dsn_ratedby")]
        [RelationshipSchemaName("dsn_creditrisk_Ratedby_SystemUser")]
        public SystemUser dsn_creditrisk_Ratedby_SystemUser {
            get {
                return GetRelatedEntity<SystemUser>("dsn_creditrisk_Ratedby_SystemUser", null);
            }
            set {
                SetRelatedEntity("dsn_creditrisk_Ratedby_SystemUser", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_account_creditrisk_id")]
        [RelationshipSchemaName("dsn_creditrisk_account_creditrisk_id_Acco")]
        public Account dsn_creditrisk_account_creditrisk_id_Acco {
            get {
                return GetRelatedEntity<Account>("dsn_creditrisk_account_creditrisk_id_Acco", null);
            }
            set {
                SetRelatedEntity("dsn_creditrisk_account_creditrisk_id_Acco", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_creditrisk_dsn_creditrisk_dsn_Employe")]
        public IEnumerable<dsn_Employee> dsn_creditrisk_dsn_creditrisk_dsn_Employe {
            get {
                return GetRelatedEntities<dsn_Employee>("dsn_creditrisk_dsn_creditrisk_dsn_Employe", null);
            }
            set {
                SetRelatedEntities("dsn_creditrisk_dsn_creditrisk_dsn_Employe", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_filehandling_CreditRiskRelatedCreditR")]
        public IEnumerable<dsn_filehandling> dsn_filehandling_CreditRiskRelatedCreditR {
            get {
                return GetRelatedEntities<dsn_filehandling>("dsn_filehandling_CreditRiskRelatedCreditR", null);
            }
            set {
                SetRelatedEntities("dsn_filehandling_CreditRiskRelatedCreditR", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dsn_creditrisk_createdby")]
        public SystemUser lk_dsn_creditrisk_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_creditrisk_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_creditrisk_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dsn_creditrisk_createdonbehalfby")]
        public SystemUser lk_dsn_creditrisk_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_creditrisk_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_creditrisk_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dsn_creditrisk_modifiedby")]
        public SystemUser lk_dsn_creditrisk_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_creditrisk_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_creditrisk_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dsn_creditrisk_modifiedonbehalfby")]
        public SystemUser lk_dsn_creditrisk_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_creditrisk_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_creditrisk_modifiedonbehalfby", null, value);
            }
        }
        
        public static dsn_creditrisk Retrieve(IOrganizationService service, Guid id, params Expression<Func<dsn_creditrisk,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>File collectiong to handle files from Contract / Charter Party / Credit Risk etc.</para>
    /// <para>Display Name: File Handling</para>
    /// </summary>
    [EntityLogicalName("dsn_filehandling")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dsn_filehandling : ExtendedEntity<dsn_filehandlingState, dsn_filehandling_statuscode> {
        
        public const string EntityLogicalName = "dsn_filehandling";
        
        public const int EntityTypeCode = 10057;
        
        public dsn_filehandling() : 
                base(EntityLogicalName) {
        }
        
        public dsn_filehandling(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dsn_name");
            }
        }
        
        [AttributeLogicalName("dsn_filehandlingid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dsn_filehandlingid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: File Handling</para>
        /// </summary>
        [AttributeLogicalName("dsn_filehandlingid")]
        public Guid? dsn_filehandlingId {
            get {
                return GetAttributeValue<Guid?>("dsn_filehandlingid");
            }
            set {
                SetId("dsn_filehandlingid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Area</para>
        /// </summary>
        [AttributeLogicalName("dsn_area")]
        public dsn_filehandling_dsn_Area? dsn_Area {
            get {
                return GetOptionSetValue<dsn_filehandling_dsn_Area>("dsn_area");
            }
            set {
                SetOptionSetValue("dsn_area", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Charter Party Addendum No</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartyaddendumno")]
        public dsn_charterpartyaddendumno? dsn_CharterPartyAddendumNo {
            get {
                return GetOptionSetValue<dsn_charterpartyaddendumno>("dsn_charterpartyaddendumno");
            }
            set {
                SetOptionSetValue("dsn_charterpartyaddendumno", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Charter Party Addendum No to DC</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartyaddendumnotodc")]
        public dsn_charterpartyaddendumno? dsn_CharterPartyAddendumNotoDC {
            get {
                return GetOptionSetValue<dsn_charterpartyaddendumno>("dsn_charterpartyaddendumnotodc");
            }
            set {
                SetOptionSetValue("dsn_charterpartyaddendumnotodc", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Charter Party Date 2nd reminder Fully</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartydate2ndreminderfully")]
        public DateTime? dsn_CharterPartyDate2ndreminderFully {
            get {
                return GetAttributeValue<DateTime?>("dsn_charterpartydate2ndreminderfully");
            }
            set {
                SetAttributeValue("dsn_charterpartydate2ndreminderfully", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Charter Party Date 2nd reminder Working</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartydate2ndreminderworking")]
        public DateTime? dsn_CharterPartyDate2ndreminderWorking {
            get {
                return GetAttributeValue<DateTime?>("dsn_charterpartydate2ndreminderworking");
            }
            set {
                SetAttributeValue("dsn_charterpartydate2ndreminderworking", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Charter Party Days since 2nd reminder Fully</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartydayssince2ndreminderfully")]
        public int? dsn_CharterPartyDayssince2ndreminderFully {
            get {
                return GetAttributeValue<int?>("dsn_charterpartydayssince2ndreminderfully");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Charter Party Days since 2nd reminder Working</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartydayssince2ndreminderworking")]
        public int? dsn_CharterPartyDayssince2ndreminderWorking {
            get {
                return GetAttributeValue<int?>("dsn_charterpartydayssince2ndreminderworking");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Charter Party File Status</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartyfilestatus")]
        public dsn_charterpartyfilestatus? dsn_CharterPartyFileStatus {
            get {
                return GetOptionSetValue<dsn_charterpartyfilestatus>("dsn_charterpartyfilestatus");
            }
            set {
                SetOptionSetValue("dsn_charterpartyfilestatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Charter Party File Type</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartyfiletype")]
        public dsn_charterpartyfiletype? dsn_CharterPartyFileType {
            get {
                return GetOptionSetValue<dsn_charterpartyfiletype>("dsn_charterpartyfiletype");
            }
            set {
                SetOptionSetValue("dsn_charterpartyfiletype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Charter Party Flow, Fully started</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartyflowfullystarted")]
        public DateTime? dsn_CharterPartyFlowFullystarted {
            get {
                return GetAttributeValue<DateTime?>("dsn_charterpartyflowfullystarted");
            }
            set {
                SetAttributeValue("dsn_charterpartyflowfullystarted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Charter Party Flow, Working started</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartyflowworkingstarted")]
        public DateTime? dsn_CharterPartyFlowWorkingstarted {
            get {
                return GetAttributeValue<DateTime?>("dsn_charterpartyflowworkingstarted");
            }
            set {
                SetAttributeValue("dsn_charterpartyflowworkingstarted", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Charter Party Import ID</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartyimportid")]
        public string dsn_CharterPartyImportID {
            get {
                return GetAttributeValue<string>("dsn_charterpartyimportid");
            }
            set {
                SetAttributeValue("dsn_charterpartyimportid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Charter Party Link</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartylink")]
        public string dsn_CharterPartyLink {
            get {
                return GetAttributeValue<string>("dsn_charterpartylink");
            }
            set {
                SetAttributeValue("dsn_charterpartylink", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Related Charter Party</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartyrelatedcharterparty")]
        public EntityReference dsn_CharterPartyRelatedCharterParty {
            get {
                return GetAttributeValue<EntityReference>("dsn_charterpartyrelatedcharterparty");
            }
            set {
                SetAttributeValue("dsn_charterpartyrelatedcharterparty", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Charter Party Type</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartytype")]
        public dsn_charterpartytype? dsn_CharterPartyType {
            get {
                return GetOptionSetValue<dsn_charterpartytype>("dsn_charterpartytype");
            }
            set {
                SetOptionSetValue("dsn_charterpartytype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: base64prefix</para>
        /// </summary>
        [AttributeLogicalName("dsn_charterpartybase64prefix")]
        public string dsn_CharterPartybase64prefix {
            get {
                return GetAttributeValue<string>("dsn_charterpartybase64prefix");
            }
            set {
                SetAttributeValue("dsn_charterpartybase64prefix", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Contract Handling File Type</para>
        /// </summary>
        [AttributeLogicalName("dsn_contracthandlingfiletype")]
        public dsn_contracthandlingfiletype? dsn_ContractHandlingFileType {
            get {
                return GetOptionSetValue<dsn_contracthandlingfiletype>("dsn_contracthandlingfiletype");
            }
            set {
                SetOptionSetValue("dsn_contracthandlingfiletype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Contract Handling Lookup</para>
        /// </summary>
        [AttributeLogicalName("dsn_contracthandlinglookup")]
        public EntityReference dsn_ContractHandlingLookup {
            get {
                return GetAttributeValue<EntityReference>("dsn_contracthandlinglookup");
            }
            set {
                SetAttributeValue("dsn_contracthandlinglookup", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Credit Risk File Type</para>
        /// </summary>
        [AttributeLogicalName("dsn_creditriskfiletype")]
        public dsn_creditriskfiletype? dsn_CreditRiskFileType {
            get {
                return GetOptionSetValue<dsn_creditriskfiletype>("dsn_creditriskfiletype");
            }
            set {
                SetOptionSetValue("dsn_creditriskfiletype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Credit Risk Related Credit Risk</para>
        /// </summary>
        [AttributeLogicalName("dsn_creditriskrelatedcreditrisk")]
        public EntityReference dsn_CreditRiskRelatedCreditRisk {
            get {
                return GetAttributeValue<EntityReference>("dsn_creditriskrelatedcreditrisk");
            }
            set {
                SetAttributeValue("dsn_creditriskrelatedcreditrisk", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dsn_name")]
        public string dsn_name {
            get {
                return GetAttributeValue<string>("dsn_name");
            }
            set {
                SetAttributeValue("dsn_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the File Handling</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dsn_filehandlingState? statecode {
            get {
                return GetOptionSetValue<dsn_filehandlingState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the File Handling</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dsn_filehandling_statuscode? statuscode {
            get {
                return GetOptionSetValue<dsn_filehandling_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("dsn_charterpartyrelatedcharterparty")]
        [RelationshipSchemaName("dsn_filehandling_CharterPartyRelatedChart")]
        public dsn_charterparty dsn_filehandling_CharterPartyRelatedChart {
            get {
                return GetRelatedEntity<dsn_charterparty>("dsn_filehandling_CharterPartyRelatedChart", null);
            }
            set {
                SetRelatedEntity("dsn_filehandling_CharterPartyRelatedChart", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_contracthandlinglookup")]
        [RelationshipSchemaName("dsn_filehandling_ContractHandlingLookup_d")]
        public dsn_contracthandling dsn_filehandling_ContractHandlingLookup_d {
            get {
                return GetRelatedEntity<dsn_contracthandling>("dsn_filehandling_ContractHandlingLookup_d", null);
            }
            set {
                SetRelatedEntity("dsn_filehandling_ContractHandlingLookup_d", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_creditriskrelatedcreditrisk")]
        [RelationshipSchemaName("dsn_filehandling_CreditRiskRelatedCreditR")]
        public dsn_creditrisk dsn_filehandling_CreditRiskRelatedCreditR {
            get {
                return GetRelatedEntity<dsn_creditrisk>("dsn_filehandling_CreditRiskRelatedCreditR", null);
            }
            set {
                SetRelatedEntity("dsn_filehandling_CreditRiskRelatedCreditR", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dsn_filehandling_createdby")]
        public SystemUser lk_dsn_filehandling_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_filehandling_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_filehandling_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dsn_filehandling_createdonbehalfby")]
        public SystemUser lk_dsn_filehandling_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_filehandling_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_filehandling_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dsn_filehandling_modifiedby")]
        public SystemUser lk_dsn_filehandling_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_filehandling_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_filehandling_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dsn_filehandling_modifiedonbehalfby")]
        public SystemUser lk_dsn_filehandling_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_filehandling_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_filehandling_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dsn_filehandling")]
        public Team team_dsn_filehandling {
            get {
                return GetRelatedEntity<Team>("team_dsn_filehandling", null);
            }
            set {
                SetRelatedEntity("team_dsn_filehandling", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dsn_filehandling")]
        public SystemUser user_dsn_filehandling {
            get {
                return GetRelatedEntity<SystemUser>("user_dsn_filehandling", null);
            }
            set {
                SetRelatedEntity("user_dsn_filehandling", null, value);
            }
        }
        
        public static dsn_filehandling Retrieve(IOrganizationService service, Guid id, params Expression<Func<dsn_filehandling,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Industrial Bulk</para>
    /// </summary>
    [EntityLogicalName("dsn_industrialbulk")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dsn_industrialbulk : ExtendedEntity<dsn_industrialbulkState, dsn_industrialbulk_statuscode> {
        
        public const string EntityLogicalName = "dsn_industrialbulk";
        
        public const int EntityTypeCode = 10053;
        
        public dsn_industrialbulk() : 
                base(EntityLogicalName) {
        }
        
        public dsn_industrialbulk(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dsn_name");
            }
        }
        
        [AttributeLogicalName("dsn_industrialbulkid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dsn_industrialbulkid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Industrial Bulk</para>
        /// </summary>
        [AttributeLogicalName("dsn_industrialbulkid")]
        public Guid? dsn_industrialbulkId {
            get {
                return GetAttributeValue<Guid?>("dsn_industrialbulkid");
            }
            set {
                SetId("dsn_industrialbulkid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Background</para>
        /// </summary>
        [AttributeLogicalName("dsn_background")]
        public string dsn_Background {
            get {
                return GetAttributeValue<string>("dsn_background");
            }
            set {
                SetAttributeValue("dsn_background", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Broker</para>
        /// </summary>
        [AttributeLogicalName("dsn_broker")]
        public EntityReference dsn_Broker {
            get {
                return GetAttributeValue<EntityReference>("dsn_broker");
            }
            set {
                SetAttributeValue("dsn_broker", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: COA End</para>
        /// </summary>
        [AttributeLogicalName("dsn_coaend")]
        public DateTime? dsn_COAEnd {
            get {
                return GetAttributeValue<DateTime?>("dsn_coaend");
            }
            set {
                SetAttributeValue("dsn_coaend", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: COA Start</para>
        /// </summary>
        [AttributeLogicalName("dsn_coastart")]
        public DateTime? dsn_COAStart {
            get {
                return GetAttributeValue<DateTime?>("dsn_coastart");
            }
            set {
                SetAttributeValue("dsn_coastart", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Comment</para>
        /// </summary>
        [AttributeLogicalName("dsn_comment")]
        public string dsn_Comment {
            get {
                return GetAttributeValue<string>("dsn_comment");
            }
            set {
                SetAttributeValue("dsn_comment", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Credit Rating</para>
        /// </summary>
        [AttributeLogicalName("dsn_creditrating")]
        public string dsn_CreditRating {
            get {
                return GetAttributeValue<string>("dsn_creditrating");
            }
            set {
                SetAttributeValue("dsn_creditrating", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Plant / Account</para>
        /// </summary>
        [AttributeLogicalName("dsn_plantaccount")]
        public EntityReference dsn_PlantAccount {
            get {
                return GetAttributeValue<EntityReference>("dsn_plantaccount");
            }
            set {
                SetAttributeValue("dsn_plantaccount", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Potential</para>
        /// </summary>
        [AttributeLogicalName("dsn_potential")]
        public bool? dsn_Potential {
            get {
                return GetAttributeValue<bool?>("dsn_potential");
            }
            set {
                SetAttributeValue("dsn_potential", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Primary Contact</para>
        /// </summary>
        [AttributeLogicalName("dsn_primarycontact")]
        public EntityReference dsn_PrimaryContact {
            get {
                return GetAttributeValue<EntityReference>("dsn_primarycontact");
            }
            set {
                SetAttributeValue("dsn_primarycontact", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Volume Mio</para>
        /// </summary>
        [AttributeLogicalName("dsn_volumemio")]
        public int? dsn_VolumeMio {
            get {
                return GetAttributeValue<int?>("dsn_volumemio");
            }
            set {
                SetAttributeValue("dsn_volumemio", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("dsn_website")]
        public string dsn_Website {
            get {
                return GetAttributeValue<string>("dsn_website");
            }
            set {
                SetAttributeValue("dsn_website", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("dsn_name")]
        public string dsn_name {
            get {
                return GetAttributeValue<string>("dsn_name");
            }
            set {
                SetAttributeValue("dsn_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Industrial Bulk</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dsn_industrialbulkState? statecode {
            get {
                return GetOptionSetValue<dsn_industrialbulkState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Industrial Bulk</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dsn_industrialbulk_statuscode? statuscode {
            get {
                return GetOptionSetValue<dsn_industrialbulk_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("dsn_broker")]
        [RelationshipSchemaName("dsn_industrialbulk_Broker_Contact")]
        public Contact dsn_industrialbulk_Broker_Contact {
            get {
                return GetRelatedEntity<Contact>("dsn_industrialbulk_Broker_Contact", null);
            }
            set {
                SetRelatedEntity("dsn_industrialbulk_Broker_Contact", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_plantaccount")]
        [RelationshipSchemaName("dsn_industrialbulk_PlantAccount_Account")]
        public Account dsn_industrialbulk_PlantAccount_Account {
            get {
                return GetRelatedEntity<Account>("dsn_industrialbulk_PlantAccount_Account", null);
            }
            set {
                SetRelatedEntity("dsn_industrialbulk_PlantAccount_Account", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_primarycontact")]
        [RelationshipSchemaName("dsn_industrialbulk_PrimaryContact_Contact")]
        public Contact dsn_industrialbulk_PrimaryContact_Contact {
            get {
                return GetRelatedEntity<Contact>("dsn_industrialbulk_PrimaryContact_Contact", null);
            }
            set {
                SetRelatedEntity("dsn_industrialbulk_PrimaryContact_Contact", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_meetingreport_IndustrialBulk_dsn_indu")]
        public IEnumerable<dsn_meetingreport> dsn_meetingreport_IndustrialBulk_dsn_indu {
            get {
                return GetRelatedEntities<dsn_meetingreport>("dsn_meetingreport_IndustrialBulk_dsn_indu", null);
            }
            set {
                SetRelatedEntities("dsn_meetingreport_IndustrialBulk_dsn_indu", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dsn_industrialbulk_createdby")]
        public SystemUser lk_dsn_industrialbulk_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_industrialbulk_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_industrialbulk_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dsn_industrialbulk_createdonbehalfby")]
        public SystemUser lk_dsn_industrialbulk_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_industrialbulk_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_industrialbulk_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dsn_industrialbulk_modifiedby")]
        public SystemUser lk_dsn_industrialbulk_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_industrialbulk_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_industrialbulk_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dsn_industrialbulk_modifiedonbehalfby")]
        public SystemUser lk_dsn_industrialbulk_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_industrialbulk_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_industrialbulk_modifiedonbehalfby", null, value);
            }
        }
        
        public static dsn_industrialbulk Retrieve(IOrganizationService service, Guid id, params Expression<Func<dsn_industrialbulk,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Meeting Report</para>
    /// </summary>
    [EntityLogicalName("dsn_meetingreport")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dsn_meetingreport : ExtendedEntity<dsn_meetingreportState, dsn_meetingreport_statuscode> {
        
        public const string EntityLogicalName = "dsn_meetingreport";
        
        public const int EntityTypeCode = 10052;
        
        public dsn_meetingreport() : 
                base(EntityLogicalName) {
        }
        
        public dsn_meetingreport(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dsn_name");
            }
        }
        
        [AttributeLogicalName("dsn_meetingreportid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dsn_meetingreportid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Meeting Report</para>
        /// </summary>
        [AttributeLogicalName("dsn_meetingreportid")]
        public Guid? dsn_meetingreportId {
            get {
                return GetAttributeValue<Guid?>("dsn_meetingreportid");
            }
            set {
                SetId("dsn_meetingreportid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("dsn_account")]
        public EntityReference dsn_Account {
            get {
                return GetAttributeValue<EntityReference>("dsn_account");
            }
            set {
                SetAttributeValue("dsn_account", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("dsn_description")]
        public string dsn_Description {
            get {
                return GetAttributeValue<string>("dsn_description");
            }
            set {
                SetAttributeValue("dsn_description", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Industrial Bulk</para>
        /// </summary>
        [AttributeLogicalName("dsn_industrialbulk")]
        public EntityReference dsn_IndustrialBulk {
            get {
                return GetAttributeValue<EntityReference>("dsn_industrialbulk");
            }
            set {
                SetAttributeValue("dsn_industrialbulk", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Visit Date</para>
        /// </summary>
        [AttributeLogicalName("dsn_visitdate")]
        public DateTime? dsn_VisitDate {
            get {
                return GetAttributeValue<DateTime?>("dsn_visitdate");
            }
            set {
                SetAttributeValue("dsn_visitdate", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Purpose</para>
        /// </summary>
        [AttributeLogicalName("dsn_name")]
        public string dsn_name {
            get {
                return GetAttributeValue<string>("dsn_name");
            }
            set {
                SetAttributeValue("dsn_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Meeting Report</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dsn_meetingreportState? statecode {
            get {
                return GetOptionSetValue<dsn_meetingreportState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Meeting Report</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dsn_meetingreport_statuscode? statuscode {
            get {
                return GetOptionSetValue<dsn_meetingreport_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("dsn_account")]
        [RelationshipSchemaName("dsn_meetingreport_Account_Account")]
        public Account dsn_meetingreport_Account_Account {
            get {
                return GetRelatedEntity<Account>("dsn_meetingreport_Account_Account", null);
            }
            set {
                SetRelatedEntity("dsn_meetingreport_Account_Account", null, value);
            }
        }
        
        [AttributeLogicalName("dsn_industrialbulk")]
        [RelationshipSchemaName("dsn_meetingreport_IndustrialBulk_dsn_indu")]
        public dsn_industrialbulk dsn_meetingreport_IndustrialBulk_dsn_indu {
            get {
                return GetRelatedEntity<dsn_industrialbulk>("dsn_meetingreport_IndustrialBulk_dsn_indu", null);
            }
            set {
                SetRelatedEntity("dsn_meetingreport_IndustrialBulk_dsn_indu", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_meetingreport_dsn_meetingreport_Conta")]
        public IEnumerable<Contact> dsn_meetingreport_dsn_meetingreport_Conta {
            get {
                return GetRelatedEntities<Contact>("dsn_meetingreport_dsn_meetingreport_Conta", null);
            }
            set {
                SetRelatedEntities("dsn_meetingreport_dsn_meetingreport_Conta", null, value);
            }
        }
        
        [RelationshipSchemaName("dsn_meetingreport_dsn_user")]
        public IEnumerable<SystemUser> dsn_meetingreport_dsn_user {
            get {
                return GetRelatedEntities<SystemUser>("dsn_meetingreport_dsn_user", null);
            }
            set {
                SetRelatedEntities("dsn_meetingreport_dsn_user", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dsn_meetingreport_createdby")]
        public SystemUser lk_dsn_meetingreport_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_meetingreport_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_meetingreport_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dsn_meetingreport_createdonbehalfby")]
        public SystemUser lk_dsn_meetingreport_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_meetingreport_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_meetingreport_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dsn_meetingreport_modifiedby")]
        public SystemUser lk_dsn_meetingreport_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_meetingreport_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_meetingreport_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dsn_meetingreport_modifiedonbehalfby")]
        public SystemUser lk_dsn_meetingreport_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dsn_meetingreport_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dsn_meetingreport_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dsn_meetingreport")]
        public Team team_dsn_meetingreport {
            get {
                return GetRelatedEntity<Team>("team_dsn_meetingreport", null);
            }
            set {
                SetRelatedEntity("team_dsn_meetingreport", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dsn_meetingreport")]
        public SystemUser user_dsn_meetingreport {
            get {
                return GetRelatedEntity<SystemUser>("user_dsn_meetingreport", null);
            }
            set {
                SetRelatedEntity("user_dsn_meetingreport", null, value);
            }
        }
        
        public static dsn_meetingreport Retrieve(IOrganizationService service, Guid id, params Expression<Func<dsn_meetingreport,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    public partial class XrmContext : ExtendedOrganizationServiceContext {
        
        public XrmContext(IOrganizationService service) : 
                base(service) {
        }
        
        public IQueryable<Account> AccountSet {
            get {
                return CreateQuery<Account>();
            }
        }
        
        public IQueryable<Contact> ContactSet {
            get {
                return CreateQuery<Contact>();
            }
        }
        
        public IQueryable<SystemUser> SystemUserSet {
            get {
                return CreateQuery<SystemUser>();
            }
        }
        
        public IQueryable<Team> TeamSet {
            get {
                return CreateQuery<Team>();
            }
        }
        
        public IQueryable<TeamMembership> TeamMembershipSet {
            get {
                return CreateQuery<TeamMembership>();
            }
        }
        
        public IQueryable<WebResource> WebResourceSet {
            get {
                return CreateQuery<WebResource>();
            }
        }
        
        public IQueryable<dsn_DistirubutionList> dsn_DistirubutionListSet {
            get {
                return CreateQuery<dsn_DistirubutionList>();
            }
        }
        
        public IQueryable<dsn_Employee> dsn_EmployeeSet {
            get {
                return CreateQuery<dsn_Employee>();
            }
        }
        
        public IQueryable<dsn_SensitiveDataAccess> dsn_SensitiveDataAccessSet {
            get {
                return CreateQuery<dsn_SensitiveDataAccess>();
            }
        }
        
        public IQueryable<dsn_charterparty> dsn_charterpartySet {
            get {
                return CreateQuery<dsn_charterparty>();
            }
        }
        
        public IQueryable<dsn_contracthandling> dsn_contracthandlingSet {
            get {
                return CreateQuery<dsn_contracthandling>();
            }
        }
        
        public IQueryable<dsn_creditrisk> dsn_creditriskSet {
            get {
                return CreateQuery<dsn_creditrisk>();
            }
        }
        
        public IQueryable<dsn_filehandling> dsn_filehandlingSet {
            get {
                return CreateQuery<dsn_filehandling>();
            }
        }
        
        public IQueryable<dsn_industrialbulk> dsn_industrialbulkSet {
            get {
                return CreateQuery<dsn_industrialbulk>();
            }
        }
        
        public IQueryable<dsn_meetingreport> dsn_meetingreportSet {
            get {
                return CreateQuery<dsn_meetingreport>();
            }
        }
    }
    
    [DataContract()]
    public enum Account_Address1_AddressTypeCode {
        
        [EnumMember()]
        BillTo = 1,
        
        [EnumMember()]
        ShipTo = 2,
        
        [EnumMember()]
        Primary = 3,
        
        [EnumMember()]
        Other = 4,
    }
    
    [DataContract()]
    public enum Account_Address1_ShippingMethodCode {
        
        [EnumMember()]
        Airborne = 1,
        
        [EnumMember()]
        DHL = 2,
        
        [EnumMember()]
        FedEx = 3,
        
        [EnumMember()]
        UPS = 4,
        
        [EnumMember()]
        PostalMail = 5,
        
        [EnumMember()]
        FullLoad = 6,
        
        [EnumMember()]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum Account_StatusCode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum Account_Address1_FreightTermsCode {
        
        [EnumMember()]
        FOB = 1,
        
        [EnumMember()]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum Account_AccountRatingCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_PreferredAppointmentTimeCode {
        
        [EnumMember()]
        Morning = 1,
        
        [EnumMember()]
        Afternoon = 2,
        
        [EnumMember()]
        Evening = 3,
    }
    
    [DataContract()]
    public enum Account_AccountClassificationCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_CustomerTypeCode {
        
        [EnumMember()]
        Competitor = 1,
        
        [EnumMember()]
        Consultant = 2,
        
        [EnumMember()]
        Customer = 3,
        
        [EnumMember()]
        Investor = 4,
        
        [EnumMember()]
        Partner = 5,
        
        [EnumMember()]
        Influencer = 6,
        
        [EnumMember()]
        Press = 7,
        
        [EnumMember()]
        Prospect = 8,
        
        [EnumMember()]
        Reseller = 9,
        
        [EnumMember()]
        Supplier = 10,
        
        [EnumMember()]
        Vendor = 11,
        
        [EnumMember()]
        Other = 12,
    }
    
    [DataContract()]
    public enum Account_PreferredContactMethodCode {
        
        [EnumMember()]
        Any = 1,
        
        [EnumMember()]
        Email = 2,
        
        [EnumMember()]
        Phone = 3,
        
        [EnumMember()]
        Fax = 4,
        
        [EnumMember()]
        Mail = 5,
    }
    
    [DataContract()]
    public enum Account_OwnershipCode {
        
        [EnumMember()]
        Public = 1,
        
        [EnumMember()]
        Private = 2,
        
        [EnumMember()]
        Subsidiary = 3,
        
        [EnumMember()]
        Other = 4,
    }
    
    [DataContract()]
    public enum Account_Address2_AddressTypeCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_BusinessTypeCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_ShippingMethodCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_PaymentTermsCode {
        
        [EnumMember()]
        Net30 = 1,
        
        [EnumMember()]
        _210Net30 = 2,
        
        [EnumMember()]
        Net45 = 3,
        
        [EnumMember()]
        Net60 = 4,
    }
    
    [DataContract()]
    public enum AccountState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Account_CustomerSizeCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_AccountCategoryCode {
        
        [EnumMember()]
        PreferredCustomer = 1,
        
        [EnumMember()]
        Standard = 2,
    }
    
    [DataContract()]
    public enum Account_IndustryCode {
        
        [EnumMember()]
        Accounting = 1,
        
        [EnumMember()]
        AgricultureandNonpetrolNaturalResourceExtraction = 2,
        
        [EnumMember()]
        BroadcastingPrintingandPublishing = 3,
        
        [EnumMember()]
        Brokers = 4,
        
        [EnumMember()]
        BuildingSupplyRetail = 5,
        
        [EnumMember()]
        BusinessServices = 6,
        
        [EnumMember()]
        Consulting = 7,
        
        [EnumMember()]
        ConsumerServices = 8,
        
        [EnumMember()]
        DesignDirectionandCreativeManagement = 9,
        
        [EnumMember()]
        DistributorsDispatchersandProcessors = 10,
        
        [EnumMember()]
        DoctorsOfficesandClinics = 11,
        
        [EnumMember()]
        DurableManufacturing = 12,
        
        [EnumMember()]
        EatingandDrinkingPlaces = 13,
        
        [EnumMember()]
        EntertainmentRetail = 14,
        
        [EnumMember()]
        EquipmentRentalandLeasing = 15,
        
        [EnumMember()]
        Financial = 16,
        
        [EnumMember()]
        FoodandTobaccoProcessing = 17,
        
        [EnumMember()]
        InboundCapitalIntensiveProcessing = 18,
        
        [EnumMember()]
        InboundRepairandServices = 19,
        
        [EnumMember()]
        Insurance = 20,
        
        [EnumMember()]
        LegalServices = 21,
        
        [EnumMember()]
        NonDurableMerchandiseRetail = 22,
        
        [EnumMember()]
        OutboundConsumerService = 23,
        
        [EnumMember()]
        PetrochemicalExtractionandDistribution = 24,
        
        [EnumMember()]
        ServiceRetail = 25,
        
        [EnumMember()]
        SIGAffiliations = 26,
        
        [EnumMember()]
        SocialServices = 27,
        
        [EnumMember()]
        SpecialOutboundTradeContractors = 28,
        
        [EnumMember()]
        SpecialtyRealty = 29,
        
        [EnumMember()]
        Transportation = 30,
        
        [EnumMember()]
        UtilityCreationandDistribution = 31,
        
        [EnumMember()]
        VehicleRetail = 32,
        
        [EnumMember()]
        Wholesale = 33,
    }
    
    [DataContract()]
    public enum Account_PreferredAppointmentDayCode {
        
        [EnumMember()]
        Sunday = 0,
        
        [EnumMember()]
        Monday = 1,
        
        [EnumMember()]
        Tuesday = 2,
        
        [EnumMember()]
        Wednesday = 3,
        
        [EnumMember()]
        Thursday = 4,
        
        [EnumMember()]
        Friday = 5,
        
        [EnumMember()]
        Saturday = 6,
    }
    
    [DataContract()]
    public enum Account_Address2_ShippingMethodCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_Address2_FreightTermsCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_TerritoryCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_AddressTypeCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address1_AddressTypeCode {
        
        [EnumMember()]
        BillTo = 1,
        
        [EnumMember()]
        ShipTo = 2,
        
        [EnumMember()]
        Primary = 3,
        
        [EnumMember()]
        Other = 4,
    }
    
    [DataContract()]
    public enum Contact_Address1_ShippingMethodCode {
        
        [EnumMember()]
        Airborne = 1,
        
        [EnumMember()]
        DHL = 2,
        
        [EnumMember()]
        FedEx = 3,
        
        [EnumMember()]
        UPS = 4,
        
        [EnumMember()]
        PostalMail = 5,
        
        [EnumMember()]
        FullLoad = 6,
        
        [EnumMember()]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum Contact_PaymentTermsCode {
        
        [EnumMember()]
        Net30 = 1,
        
        [EnumMember()]
        _210Net30 = 2,
        
        [EnumMember()]
        Net45 = 3,
        
        [EnumMember()]
        Net60 = 4,
    }
    
    [DataContract()]
    public enum Contact_GenderCode {
        
        [EnumMember()]
        Male = 1,
        
        [EnumMember()]
        Female = 2,
    }
    
    [DataContract()]
    public enum Contact_PreferredAppointmentTimeCode {
        
        [EnumMember()]
        Morning = 1,
        
        [EnumMember()]
        Afternoon = 2,
        
        [EnumMember()]
        Evening = 3,
    }
    
    [DataContract()]
    public enum Contact_StatusCode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum Contact_Address1_FreightTermsCode {
        
        [EnumMember()]
        FOB = 1,
        
        [EnumMember()]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum Contact_Address3_ShippingMethodCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_CustomerTypeCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_EducationCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_dsn_Salutation {
        
        [EnumMember()]
        Mr = 860930000,
        
        [EnumMember()]
        Mrs = 860930001,
        
        [EnumMember()]
        Miss = 860930002,
        
        [EnumMember()]
        Ms = 860930003,
        
        [EnumMember()]
        Capt = 860930004,
    }
    
    [DataContract()]
    public enum Contact_PreferredContactMethodCode {
        
        [EnumMember()]
        Any = 1,
        
        [EnumMember()]
        Email = 2,
        
        [EnumMember()]
        Phone = 3,
        
        [EnumMember()]
        Fax = 4,
        
        [EnumMember()]
        Mail = 5,
    }
    
    [DataContract()]
    public enum Contact_AccountRoleCode {
        
        [EnumMember()]
        DecisionMaker = 1,
        
        [EnumMember()]
        Employee = 2,
        
        [EnumMember()]
        Influencer = 3,
    }
    
    [DataContract()]
    public enum Contact_ShippingMethodCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_FreightTermsCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum ContactState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Contact_Address2_AddressTypeCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_CustomerSizeCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_PreferredAppointmentDayCode {
        
        [EnumMember()]
        Sunday = 0,
        
        [EnumMember()]
        Monday = 1,
        
        [EnumMember()]
        Tuesday = 2,
        
        [EnumMember()]
        Wednesday = 3,
        
        [EnumMember()]
        Thursday = 4,
        
        [EnumMember()]
        Friday = 5,
        
        [EnumMember()]
        Saturday = 6,
    }
    
    [DataContract()]
    public enum Contact_HasChildrenCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_FamilyStatusCode {
        
        [EnumMember()]
        Single = 1,
        
        [EnumMember()]
        Married = 2,
        
        [EnumMember()]
        Divorced = 3,
        
        [EnumMember()]
        Widowed = 4,
    }
    
    [DataContract()]
    public enum Contact_Address2_ShippingMethodCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_LeadSourceCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address2_FreightTermsCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_TerritoryCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_AddressTypeCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_ShippingMethodCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredEmailCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_OutgoingEmailDeliveryMethod {
        
        [EnumMember()]
        None = 0,
        
        [EnumMember()]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        ServerSideSynchronizationorEmailRouter = 2,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredPhoneCode {
        
        [EnumMember()]
        MainPhone = 1,
        
        [EnumMember()]
        OtherPhone = 2,
        
        [EnumMember()]
        HomePhone = 3,
        
        [EnumMember()]
        MobilePhone = 4,
    }
    
    [DataContract()]
    public enum SystemUser_EmailRouterAccessApproval {
        
        [EnumMember()]
        Empty = 0,
        
        [EnumMember()]
        Approved = 1,
        
        [EnumMember()]
        PendingApproval = 2,
        
        [EnumMember()]
        Rejected = 3,
    }
    
    [DataContract()]
    public enum SystemUser_IncomingEmailDeliveryMethod {
        
        [EnumMember()]
        None = 0,
        
        [EnumMember()]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        ServerSideSynchronizationorEmailRouter = 2,
        
        [EnumMember()]
        ForwardMailbox = 3,
    }
    
    [DataContract()]
    public enum SystemUser_CALType {
        
        [EnumMember()]
        Professional = 0,
        
        [EnumMember()]
        Administrative = 1,
        
        [EnumMember()]
        Basic = 2,
        
        [EnumMember()]
        DeviceProfessional = 3,
        
        [EnumMember()]
        DeviceBasic = 4,
        
        [EnumMember()]
        Essential = 5,
        
        [EnumMember()]
        DeviceEssential = 6,
        
        [EnumMember()]
        Enterprise = 7,
        
        [EnumMember()]
        DeviceEnterprise = 8,
        
        [EnumMember()]
        Sales = 9,
        
        [EnumMember()]
        Service = 10,
        
        [EnumMember()]
        FieldService = 11,
        
        [EnumMember()]
        ProjectService = 12,
    }
    
    [DataContract()]
    public enum SystemUser_AccessMode {
        
        [EnumMember()]
        ReadWrite = 0,
        
        [EnumMember()]
        Administrative = 1,
        
        [EnumMember()]
        Read = 2,
        
        [EnumMember()]
        SupportUser = 3,
        
        [EnumMember()]
        Noninteractive = 4,
        
        [EnumMember()]
        DelegatedAdmin = 5,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_AddressTypeCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_InviteStatusCode {
        
        [EnumMember()]
        InvitationNotSent = 0,
        
        [EnumMember()]
        Invited = 1,
        
        [EnumMember()]
        InvitationNearExpired = 2,
        
        [EnumMember()]
        InvitationExpired = 3,
        
        [EnumMember()]
        InvitationAccepted = 4,
        
        [EnumMember()]
        InvitationRejected = 5,
        
        [EnumMember()]
        InvitationRevoked = 6,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_ShippingMethodCode {
        
        [EnumMember()]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredAddressCode {
        
        [EnumMember()]
        MailingAddress = 1,
        
        [EnumMember()]
        OtherAddress = 2,
    }
    
    [DataContract()]
    public enum Team_TeamType {
        
        [EnumMember()]
        Owner = 0,
        
        [EnumMember()]
        Access = 1,
        
        [EnumMember()]
        AADSecurityGroup = 2,
        
        [EnumMember()]
        AADOfficeGroup = 3,
    }
    
    [DataContract()]
    public enum WebResource_WebResourceType {
        
        [EnumMember()]
        WebpageHTML = 1,
        
        [EnumMember()]
        StyleSheetCSS = 2,
        
        [EnumMember()]
        ScriptJScript = 3,
        
        [EnumMember()]
        DataXML = 4,
        
        [EnumMember()]
        PNGformat = 5,
        
        [EnumMember()]
        JPGformat = 6,
        
        [EnumMember()]
        GIFformat = 7,
        
        [EnumMember()]
        SilverlightXAP = 8,
        
        [EnumMember()]
        StyleSheetXSL = 9,
        
        [EnumMember()]
        ICOformat = 10,
        
        [EnumMember()]
        VectorformatSVG = 11,
        
        [EnumMember()]
        StringRESX = 12,
    }
    
    [DataContract()]
    public enum dsn_DistirubutionListState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dsn_DistirubutionList_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dsn_EmployeeState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dsn_Employee_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dsn_SensitiveDataAccessState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dsn_SensitiveDataAccess_statuscode {
        
        [EnumMember()]
        Inactive = 2,
        
        [EnumMember()]
        Approved = 860930000,
        
        [EnumMember()]
        NotApproved = 860930001,
    }
    
    [DataContract()]
    public enum dsn_charterpartyState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dsn_charterparty_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dsn_contracthandlingState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dsn_contracthandling_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
        
        [EnumMember()]
        Expired = 860930000,
    }
    
    [DataContract()]
    public enum dsn_creditriskState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dsn_creditrisk_statuscode {
        
        [EnumMember()]
        Inactive = 2,
        
        [EnumMember()]
        New = 860930000,
        
        [EnumMember()]
        Pending = 860930001,
        
        [EnumMember()]
        Approved = 860930002,
    }
    
    [DataContract()]
    public enum dsn_filehandlingState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dsn_filehandling_dsn_Area {
        
        [EnumMember()]
        CharterParty = 860930000,
        
        [EnumMember()]
        ContractHandling = 860930001,
        
        [EnumMember()]
        CreditRisk = 860930002,
    }
    
    [DataContract()]
    public enum dsn_filehandling_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dsn_industrialbulkState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dsn_industrialbulk_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dsn_meetingreportState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dsn_meetingreport_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum field_security_permission_type {
        
        [EnumMember()]
        NotAllowed = 0,
        
        [EnumMember()]
        Allowed = 4,
    }
    
    [DataContract()]
    public enum dsn_imosaraccount {
        
        [EnumMember()]
        _1200100 = 860930000,
        
        [EnumMember()]
        _1200200 = 860930001,
        
        [EnumMember()]
        _1200300 = 860930002,
        
        [EnumMember()]
        _1200400 = 860930003,
    }
    
    [DataContract()]
    public enum dsn_companytype {
        
        [EnumMember()]
        _9 = 860930000,
        
        [EnumMember()]
        A = 860930001,
        
        [EnumMember()]
        B = 860930002,
        
        [EnumMember()]
        C = 860930003,
        
        [EnumMember()]
        E = 860930004,
        
        [EnumMember()]
        F = 860930005,
        
        [EnumMember()]
        M = 860930006,
        
        [EnumMember()]
        N = 860930007,
        
        [EnumMember()]
        O = 860930008,
        
        [EnumMember()]
        P = 860930009,
        
        [EnumMember()]
        R = 860930010,
        
        [EnumMember()]
        S = 860930011,
        
        [EnumMember()]
        Z = 860930012,
    }
    
    [DataContract()]
    public enum dsn_imosapaccount {
        
        [EnumMember()]
        _3400100 = 860930000,
        
        [EnumMember()]
        _3400200 = 860930001,
        
        [EnumMember()]
        _3400300 = 860930002,
        
        [EnumMember()]
        _3400400 = 860930003,
        
        [EnumMember()]
        _3400500 = 860930004,
    }
    
    [DataContract()]
    public enum dsn_definition {
        
        [EnumMember()]
        Agents = 860930000,
        
        [EnumMember()]
        Brokers = 860930001,
        
        [EnumMember()]
        BunkerVendors = 860930002,
        
        [EnumMember()]
        Charterers = 860930003,
        
        [EnumMember()]
        Owners = 860930004,
        
        [EnumMember()]
        PortServiceSuppliers = 860930005,
        
        [EnumMember()]
        Receivers = 860930006,
        
        [EnumMember()]
        Shippers = 860930007,
    }
    
    [DataContract()]
    public enum dsn_navisiontype {
        
        [EnumMember()]
        Customer = 860930000,
        
        [EnumMember()]
        Vendor = 860930001,
    }
    
    [DataContract()]
    public enum dsn_companytypesuffix {
        
        [EnumMember()]
        _01 = 860930000,
        
        [EnumMember()]
        _02 = 860930001,
        
        [EnumMember()]
        _03 = 860930002,
        
        [EnumMember()]
        _06 = 860930003,
        
        [EnumMember()]
        _15 = 860930004,
        
        [EnumMember()]
        _16 = 860930005,
        
        [EnumMember()]
        _18 = 860930006,
        
        [EnumMember()]
        _19 = 860930007,
    }
    
    [DataContract()]
    public enum componentstate {
        
        [EnumMember()]
        Published = 0,
        
        [EnumMember()]
        Unpublished = 1,
        
        [EnumMember()]
        Deleted = 2,
        
        [EnumMember()]
        DeletedUnpublished = 3,
    }
    
    [DataContract()]
    public enum dsn_rating {
        
        [EnumMember()]
        AA = 860930000,
        
        [EnumMember()]
        AB = 860930001,
        
        [EnumMember()]
        AC = 860930002,
        
        [EnumMember()]
        AD = 860930003,
        
        [EnumMember()]
        BA = 860930004,
        
        [EnumMember()]
        BB = 860930005,
        
        [EnumMember()]
        BC = 860930006,
        
        [EnumMember()]
        BD = 860930007,
        
        [EnumMember()]
        CA = 860930008,
        
        [EnumMember()]
        CB = 860930009,
        
        [EnumMember()]
        CD = 860930010,
        
        [EnumMember()]
        DA = 860930011,
        
        [EnumMember()]
        DB = 860930012,
        
        [EnumMember()]
        DC = 860930013,
        
        [EnumMember()]
        DD = 860930014,
        
        [EnumMember()]
        COMPLIANCEISSUES = 860930015,
        
        [EnumMember()]
        COMPLIANCEISSUES_2 = 860930016,
    }
    
    [DataContract()]
    public enum dsn_businesstypecompany {
        
        [EnumMember()]
        MiningOilMajor = 860930000,
        
        [EnumMember()]
        Industrial = 860930001,
        
        [EnumMember()]
        Shipping = 860930002,
        
        [EnumMember()]
        Trader = 860930003,
        
        [EnumMember()]
        Other = 860930004,
    }
    
    [DataContract()]
    public enum dsn_ownershipstructure {
        
        [EnumMember()]
        Privatelyowned = 860930000,
        
        [EnumMember()]
        Publiclisted = 860930001,
        
        [EnumMember()]
        Stateowned = 860930002,
    }
    
    [DataContract()]
    public enum dsn_charterpartyaddendumno {
        
        [EnumMember()]
        _1 = 860930000,
        
        [EnumMember()]
        _2 = 860930001,
        
        [EnumMember()]
        _3 = 860930002,
        
        [EnumMember()]
        _4 = 860930003,
        
        [EnumMember()]
        _5 = 860930004,
        
        [EnumMember()]
        _6 = 860930005,
        
        [EnumMember()]
        _7 = 860930006,
        
        [EnumMember()]
        _8 = 860930007,
        
        [EnumMember()]
        _9 = 860930008,
        
        [EnumMember()]
        _10 = 860930009,
        
        [EnumMember()]
        _11 = 860930010,
        
        [EnumMember()]
        _12 = 860930011,
        
        [EnumMember()]
        _13 = 860930012,
        
        [EnumMember()]
        _14 = 860930013,
        
        [EnumMember()]
        _15 = 860930014,
        
        [EnumMember()]
        _16 = 860930015,
        
        [EnumMember()]
        _17 = 860930016,
        
        [EnumMember()]
        _18 = 860930017,
        
        [EnumMember()]
        _19 = 860930018,
        
        [EnumMember()]
        _20 = 860930019,
        
        [EnumMember()]
        _21 = 860930020,
        
        [EnumMember()]
        _22 = 860930021,
        
        [EnumMember()]
        _23 = 860930022,
        
        [EnumMember()]
        _24 = 860930023,
        
        [EnumMember()]
        _25 = 860930024,
        
        [EnumMember()]
        _26 = 860930025,
        
        [EnumMember()]
        _27 = 860930026,
        
        [EnumMember()]
        _28 = 860930027,
        
        [EnumMember()]
        _29 = 860930028,
        
        [EnumMember()]
        _30 = 860930029,
    }
    
    [DataContract()]
    public enum dsn_creditriskfiletype {
        
        [EnumMember()]
        Report = 860930000,
        
        [EnumMember()]
        Zip = 860930001,
        
        [EnumMember()]
        Other = 860930002,
    }
    
    [DataContract()]
    public enum dsn_contracthandlingfiletype {
        
        [EnumMember()]
        Contract = 860930000,
        
        [EnumMember()]
        Email = 860930001,
        
        [EnumMember()]
        Other = 860930002,
    }
    
    [DataContract()]
    public enum dsn_charterpartyfiletype {
        
        [EnumMember()]
        Recap = 860930000,
        
        [EnumMember()]
        HandoverMail = 860930001,
        
        [EnumMember()]
        OtherCorrespondence = 860930002,
        
        [EnumMember()]
        CP = 860930003,
        
        [EnumMember()]
        Addendum = 860930004,
        
        [EnumMember()]
        AddendumtoDC = 860930005,
        
        [EnumMember()]
        Charteringdiscrepancyreport = 860930006,
        
        [EnumMember()]
        FixtureNote = 860930007,
        
        [EnumMember()]
        DCofCP = 860930008,
        
        [EnumMember()]
        BookingNote = 860930009,
    }
    
    [DataContract()]
    public enum dsn_charterpartytype {
        
        [EnumMember()]
        CP = 860930000,
        
        [EnumMember()]
        Recap = 860930001,
        
        [EnumMember()]
        AddNo1 = 860930002,
        
        [EnumMember()]
        AddNo2 = 860930003,
        
        [EnumMember()]
        AddNo3 = 860930004,
        
        [EnumMember()]
        AddNo4 = 860930005,
        
        [EnumMember()]
        AddNo5 = 860930006,
        
        [EnumMember()]
        FixtureNote = 860930007,
        
        [EnumMember()]
        FrameAgremeent = 860930008,
        
        [EnumMember()]
        GuaranteeLetter = 860930009,
        
        [EnumMember()]
        _2ndDCofCP = 860930010,
        
        [EnumMember()]
        Add1toDC = 860930011,
        
        [EnumMember()]
        Add2toDC = 860930012,
        
        [EnumMember()]
        Appendix = 860930013,
        
        [EnumMember()]
        BookingNote = 860930014,
        
        [EnumMember()]
        DCofCP = 860930015,
        
        [EnumMember()]
        MOA = 860930016,
        
        [EnumMember()]
        SideLetter = 860930017,
    }
    
    [DataContract()]
    public enum dsn_charterpartyfilestatus {
        
        [EnumMember()]
        na = 860930000,
        
        [EnumMember()]
        ReadyforCheck = 860930001,
        
        [EnumMember()]
        PartiallySigned = 860930002,
        
        [EnumMember()]
        FullyExecuted = 860930003,
        
        [EnumMember()]
        AwaitingworkingcopyCP = 860930004,
        
        [EnumMember()]
        WorkingcopyCPreceived = 860930005,
        
        [EnumMember()]
        AwaitingChartering = 860930006,
        
        [EnumMember()]
        AuthoritySent = 860930007,
        
        [EnumMember()]
        BeenChecekd = 860930008,
    }
}
